{"version":3,"sources":["../node_modules/@kurkle/color/dist/color.esm.js","../../src/helpers/helpers.core.ts","../../src/helpers/helpers.math.ts","../../src/helpers/helpers.collection.ts","../../src/helpers/helpers.extras.ts","../../src/helpers/helpers.easing.ts","../../src/helpers/helpers.color.ts","../../src/core/core.animations.defaults.js","../../src/core/core.layouts.defaults.js","../../src/helpers/helpers.intl.ts","../../src/core/core.ticks.js","../../src/core/core.scale.defaults.js","../../src/core/core.defaults.js","../../src/helpers/helpers.canvas.js","../../src/helpers/helpers.options.ts","../../src/helpers/helpers.config.js","../../src/helpers/helpers.curve.ts","../../src/helpers/helpers.dom.ts","../../src/helpers/helpers.interpolation.ts","../../src/helpers/helpers.rtl.ts","../../src/helpers/helpers.segment.js","../src/core/core.animator.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/controllers/controller.bar.js","../src/controllers/controller.bubble.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/core/core.adapters.ts","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.element.ts","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/elements/element.arc.ts","../src/elements/element.line.js","../src/elements/element.point.ts","../src/elements/element.bar.js","../src/plugins/plugin.colors.ts","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.ts","../node_modules/chart.js/auto/auto.js","js/MainPageCharts/drawCharts.js"],"names":["round","v","lim","l","h","Math","max","min","p2b","b2p","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","len","length","ret","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","console","warn","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","animator","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","_length","curr","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","createChart","test1","test2","getDate","temp"],"mappings":";;;;;;;A0EAA,ACCA;ADGA,ACHkC;AAAA,EDGlC;ACHkC,EDGlC,6CCHA;AAAA,EDGA;ACHA,EDGA;ACHA,IDGA,KCCsBgpF,WAAW;EAAA,EDDjC;ACCiC,MDDjC;ACCiC,IDDjC;EAAA,ACCiC,0EAA1B,iBAA2B78D,IAAI;ADDtC,ICCsC;ADHtCkwC,ICGsC,QDHjC,CAACtH,QAAQ,CAAC,GAAGg0B,oBAAa,CAAC;AAAC,MCGK,SDAvB1sB,YAAK;AAAA,QCAkB;UAE5B4sB,KAAK,GAAG,CACV,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EACpE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAG;UACnEC,KAAK,GAAG,CACZ,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtD,MAAM,EAAE,MAAM,CAAC;UAEX/8D,IAAI,GAAG88D,KAAK,CAACxlF,GAAG,CAAC,UAASogC,IAAI,EAAE3gC,CAAC,EAAE;YACrC,OAAO;A3EnBjB,c2EoBY2gC,IAAI,EAAG,IAAIO,IAAI,CAACP,IAAI,CAAC,CAAEslD,OAAO,EAAE;A3EnB5C,c2EoBYp2E,KAAK,EAAEe,UAAU,CAACo1E,KAAK,CAAChmF,CAAC,CAAC;A3EnBtC,Y2EoBU,CAAC;A3EnBX,U2EoBQ,CAAC,CAAC;A3EnBV,U2EqBUkmF,IAAI,GAAG,IAAI/sB,aAAK,CAClBthC,QAAQ,CAAC4gC,cAAc,CAAC,WAAW,CAAC,EACpC;A3EtBR,AqBMO,MAAMr4B,MsDiBHlyB,EtDjBGkyB,CAAAA,CsDiBC,EAAE,MAAM;A3EtBtB,EqBMEnyB,OrBNOnR,G2EuBCmsB,CtDjBM,CrBNF,CAAClsB,CAAC,AqBMA,AsDiBF,E3EvBI,A2EuBF;E3EtBd,EqBME,IAAI,CrBNCA,AqBMAsjC,CrBNC,GAAG,C2EuBD4L,E3EvBI,CqBMC,ErBNE,CAAC,AqBMA,AsDiBF,EAAEhjB,EtDjBI,EsDiBA,CAAC1oB,GAAG,CAAC,UAAAyuE,GAAG;A3EtBhC,IqBMI,IAAI,CAAC1uC,OAAO,AsDgBgB,GtDhBb,IAAI7e,AsDgBautD,GtDhBbvtD,AsDgBgB,CAACkf,CtDhBjBlf,GsDgBqB;A3ErB5C,IqBMI,ErBNEzkB,EqBME,CrBNC,AqBMAujC,GrBNG,CAACxjC,CAAC,A2EqB8B,E3ErB5BE,A2EqB6B,C3ErB5B,AqBMA,ErBNEC,CAAC,AqBMA,KrBNKC,AqBMA,IrBNI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACN,CAAC,EAAEG,CAAC,CAAC,EAAED,CAAC,CAAC;AAAC,IqBOjD,IAAI,CAACujC,KsDeGla,ItDfM,GAAGhnB,CsDeD,EAAE,CACR,KtDhBOA;ArBNrB,EqBOE,OrBPOhC,GAAG,CAACP,CAAC,EAAE,A2EuBAowC,KAAK,EAAE,IAAI;E3EtBzB,AqBWA1M,OrBXOzjC,AqBWPyjC,CAAQ/d,ErBXE,CAAC5lB,EqBWE,CsDYCmsB,CtDZCyX,CrBXC,CAAC3jC,CAAC,A2EuBA,EtDZE,AsDYAksB,C3EvBC,CqBWC0X,EsDYE,C3EvBC,A2EuBApgC,C3EvBC,AqBWA,ErBXE,AqBWA2N,AsDYA,C3EvBC,A2EuBA,E3EvBE,CqBWC,ErBXE,AqBWA,CrBXC,I2EuBN8gE,GAAG;A3EtBlC,IqBWI,MAAMpuC,QsDWwB,CtDXZF,GAAAA,GsDWgBsuC,EtDXhBtuC,CAAMlnB,AsDWa,CAAC3J,KAAK,GtDXV,CAAC3B,IAAK,CAAA;ArBV3C,IqBWI,KrBXK3Q,CqBWCsjC,ErBXE,CAAC9jC,CAAC,EAAE,A2EqB+B,EtDVrC8jC,GAAWH,KAAAA,CAAMvgB,QAAQ;ErBVjC,EqBYEygB,KrBZK5jC,GAAG,CAACF,AqBYT8jC,CAAUhnB,AsDSA,CAAC,G3ErBG,CAA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HF,AqBqFA,CrBrFC,GAAGA,CCxEQoD,ADwEP,CqBqFC+Z,ErBrFE,EAAE,CqBqFJA,CpB7J2BxK,CAAAA,ADwEpB,CqBqFC6wB,ErBrFE,ECxE+B,CoB6JjCA,CpB7JiD,AoB6J3CrmB,KAAK;EpB5J3B,ADwEA,EqBqFE,EpB7JEha,EoB6JEL,CAAAA,EpB7JFK,CAAMC,AoB6JA+Z,KAAMnb,CAAAA,CpB7JC,IAAImB,CoB6JC,GAAG,CpB7JEC,AoB6JF,CpB7JEA,OAAO,CAACuP,KAAQ,CAAA,EAAA;EDyE3C,ECxEE,AoB8JA,KrBtFK,CAAC3S,CCxEC,ADwEA,AqBsFA8C,CAAAA,ErBtFG,CCxEC,ADwEA,CqBsFC,CrBtFCP,AqBsFE,CrBtFD,CqBsFC,EAAEO,CrBtFC,AqBsFE,CrBtFD,CqBsFC,CrBtFC/C,CAAC,CAAC;AAC3B,MqBsFMod,KAAK,CAACra,CAAE,CAAA,CAACmiC,MAAM,EAAA;ArBrFrB,ECxEE,EoB8JE,IpB9JIj0B,CDwEC9N,GCxED8N,EDwEM,CCxECjC,ADwEA1N,CAAC,EAAEL,CAAC,ECxEG4R,ADwED3R,CCxEC2R,ADwEA,EAAE1R,CAAC,EAAE,ICxEI,CAAC2R,QAAQ,CAACC,IAAI,CAACH,KAAAA,CAAAA;EAC5C,ADwEA,EqBsFE6wB,EpB9JExyB,GDwEG,AqBsFCmM,CpB9JJnM,ADyEF7N,AqBqFMga,CpB9JCpK,IDyEF,AqBqFM,CpB9JC,ADyEN3P,CCzEO,CAAG,AoB8JF,EpB9JE,AoB8JA,CpB9JA,CAAA,CDyEH,CAACpC,CAAC,CAAC,CCzEO,ED0EnBK,CAAC,CAACL,CAAC,CAAC,CAAC,CAAC,CC1E0BgQ,CD0ExBhQ,CAAC,CAAC,CC1EsBgQ,AD0ErB,CAAC,EAAEhQ,CC1EkBgQ,AD0EjB,CC1EsB+B,AD0ErB,CAAC,CAAC,CAAC,EC1EuB,CAAC,AD2E3C1R,CC3E4C,AD2E3C,CC3E2C,AD2E1CL,CC3E0C,AD2EzC,EAAEC,CAAC,EC3E6C,AD2E3CC,CAAC,CAAC,EACdmC,GAAG,CC5E8D,AD4E7D/C,EC5E6D,CD4E1D,CAAC;AACZ,IC5EI,AoB8JA,IAAI,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A,CAAAA;ArB6CpB,EDsEC,AsBlHA10B,MtBkHM/Q,CAAC,GAAGyD,CsBlHVsN,CAAY20B,CtBkHC,CAAC,CAAC/hC,AsBlHA,CtBkHC,CAAC,AsBlHAkR,CtBkHC,CAAC,CAAC,GsBlHG,EAAEge,IAAI,EAAEhjB,EAAE,EAAE;ArB6C9B,EDsEL,EsBlHE,ItBkHIhM,CCtEQuP,CDsEN,AsBlHAuyB,GtBkHG,CAAChiC,CAAC,CAAC,CAAC,CAAC,GAAG,CsBlHXgiC,ErB4CMvyB,ADsEQ,CCtEQT,AqB5CPkC,KrB4CqB,CqB5Cf,CrB4CiBxB,AqB5ChBwf,IAAK,CAAA,OrB4C+B,EAAE;EACpE,ADsEA,EsBjHEhjB,EAAAA,EtBiHI/L,CCtECmP,AqB3CAkgB,CtBiHC,GAAG,AsBjHJA,CtBiHKxvB,CAAC,CAAC,CAAC,CAAC,GAAG,ECtEZsP,CAAeN,ADsEA,KCtESA,CAAAA,AqB3ChB,EAAA,CrB2CgBA,AqB3Cf+yB,GAAAA,CAAI71B,CrB2CW8C,CqB3CT,ErB2CiBU,AqB3CfxD,EAAAA,EAAI81B,QrB2CuB,IqB3CvBA,EAAcD,GAAAA,CAAI31B,IAAI,CAAC,CAAA;ArB4CrD,EDsEE,EsBjHE,EtBiHEpM,CAAC,CAAC,CAAC,CAAC,AsBjHAoM,IAAAA,CtBiHK,EsBjHEojB,GtBiHG,CsBjHHA,CtBiHK,gBsBjHG,EAAA,CAACuS,GAAAA,CAAI31B,IAAI,EAAE41B,YAAAA,EAAc91B,EAAAA,CAAG,CAAA;ArB6CrD,IDqEIhQ,AsBhHA,CtBgHC,GAAG0D,AsBhHA,CAAC8gC,MtBgHM,CAACrkC,AsBhHA,CtBgHC,EAAE6D,AsBhHA,EtBgHE,EAAEC,AsBhHA,EtBgHE,CAAC;EACxB,CAAC,CsBhHC,IAAI,CtBgHC,AsBhHA8hC,GAAG,CtBgHCjiC,CAAC,CAAC,AsBhHA+hC,CtBgHC,CAAC,CsBhHFA,CAAI7xB,EAAE,CtBgHC,GsBhHGsxB,EtBgHE,EAAE,SsBhHS,CAACO,GAAI10B,CAAAA,IAAI,IAAI,OAAOjB,IAAK,CAAA;ItBiH3DlQ,AsBhHA,CtBgHC,GAAG2D,AsBhHA,CAACqiC,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tB8GxC,EC1DE,IAAIjyB,AqBnDA,ErBmDM,IAAA,AqBnDAqS,MAAS,CrBmDFrS,EAAGf,AqBnDD,CrBmDCA,GqBnDG,CrBmDC,AqBnDAkyB,KrBmDK,IqBnDI,GAAGqB,GrBmDK,EAAA,EqBnDLA;AtB8GtC,IC1DI,EqBnDE,GtB6GGpiC,CsB7GC,CrBmDC4P,AqBnDAiyB,ErBmDAjyB,CAAGG,GqBnDG,CtB6GC,CC1DC,AD0DAnU,CC1DCkU,AD0DA,AsB7GA0vB,EtB6GE,EsB7GFA,GrBmDS3vB,EAAAA,IAAAA,CAAAA;ED2D3B,IAAI,AsB7GA,CtB6GCjU,CAAC,EAAE,AsB7GA,CAACmlC,SAAS,GAAG/kC,IAAKuY,CAAAA,KAAK,CAACvY,IAAAA,CAAKC,GAAG,CAACgmB,MAAQwf,EAAAA,GAAAA,CAAIziB,QAAQ,CAAA,CAAA;ArBoD/D,ID0DI,EsB7GE,IAAI,CAACqhB,MAAM,IAAI+B,OAAAA;ArB0Ed,EDoCL,IsB7GI,GrByEUpyB,CqBzEN,CAAC2tB,ErByEK3tB,CACdC,EqB1Ec,GAAG,CAAC,CAACwxB,CrB0Ec,EACjC7xB,AqB3EmB6xB,CAAIviB,CrB2Ea,EACpCpP,CqB5E2B,MrB4Ef,EACZI,OAAiB,EACjB;EACA,AD+BA,IC/BIrR,AqB9EA,CrB8EAA,CD+BE9B,CC/BSe,AD+BR,CsB7GC,CAACmkC,CrB8EmBp3B,AD+BlB9L,EC/BkB8L,AqB9EhB,GAAGqkB,CrB8EarkB,CD+BX,CAACjP,CAAC,AsB7GJszB,CtB6GK,gBsB7GG,EAAA,CAACuS,GAAAA,CAAI71B,EAAE,EAAEA,EAAAA,EAAI81B,YAAAA,EAAcD,GAAAA,CAAI31B,IAAI,CAAC,CAAA;ErB+E3D,AD+BA,IC/BI3M,AqB9EA,EtB6GEpD,CAAC,CsB7GC,CAACimC,CtB6GCjlC,CC/BNoC,AD+BO,CC/BC8Q,AD+BA,CAAC,CAAC,AsB7GA,GAAGif,GrB8EM,CAAA,AqB9ENA,ErB8EM,eqB9EE,EAAA,CAACuS,GAAAA,CAAI31B,IAAI,EAAE41B,YAAAA,EAAc91B,EAAAA,CAAG,CAAA;EtB8GrD,EC/BE9N,GAAAA,CD+BIQ,CAAC,CC/BC2R,ED+BE1T,GAAG,CAACQ,CAAC,CC/BPkT,AD+BQ,CC/BClS,AD+BA,CAAC,CAAC,IC/BI;EDgCvB,AsB7GA,ErB8EE,IAAImS,AD+BApU,CAAC,GAAGS,GC/BK,AD+BF,CAACQ,CC/BC,AD+BA,CAAC,CAAC,CAAC,CAAC;EACnB,AsB5GAikC,IrB6EI,EqB7EK,CtB4GFplC,CAAC,CC/BCiD,AD+BA9B,AsB5GA,CrB6EIe,AD+BH,GC/BGA,AD+BA,GC/BAA,AD+BG,GC/BG,ADgCd,CChCiBe,EAAAA,CAAAA,IAAK,ADgCf9C,CChCe,ADgCb,EChCgB8C,CAAK,EAAA,ADgCjBP,CAAE,CChCe,KDgCVxC,CAAE,MAAKQ,GAAG,CAACV,CAAC,CAACmB,CAAC,CAAE,GAAE,GACtC,OAAMhB,CAAE,KAAIuC,CAAE,MAAKxC,CAAE,IAAG;AAC/B,IsB9GI,IrB6EI8T,AqB7EA,ErB6EAA,CAAGf,CqB7EC,CAACuxB,ErB6EE,CAACtwB,IqB7EI,EAAE,CrB6ENA,EAASG,QAAQ,CAACpR,CAAAA,CAAE,EAAEA,CAAAA,CAAAA;ADmCtC,MClCM,ADkCAO,AsB9GA,GtB8GG,CsB9GC,CAACkhC,CtB8GC,GsB9GG,CAACP,IAAAA,CAAKC,GAAG,EAAA,CAAA;EtB+GtB//B,CAAC,EClCQ,ADkCN,CsB9GC,IAAI,CrB4EC,ADkCA,AsB9GAmgC,OAAO,GAAG,KAAK;EtB+GxBlgC,CAAC,EAAE,CClCC,AqB5EA,IAAI,CrB4ECrB,AqB5EAygC,CrB4EI,ADkCH,GClCG,CAAA,EAAGzgC,AqB5EA,CrB4EIf,AqB5EH,GrB4EGA,EqB5EE,CrB4EFA,AqB5EE,ErB4EGe,CAAK,EAAA,EAAA;EDmC9BsB,CAAC,EAAE,GClCGyP,CDkCC,CClCDA,CAAGf,IAAI,CAACiB,OAAAA,EAASG,QAAQ,CAACpR,CAAAA,CAAE,EAAEA,CAAAA,CAAAA;EDmCpCuB,AsB9GA,CtB8GC,EAAE,CClCC,IDkCI;EACRC,AsB7GAigC,CtB6GC,EAAE,CsB7GHA,CAAKd,EtB6GE,EsB7GE,EAAE;EtB8GXl/B,CClCO,ADkCN,CsB7GC,CtB6GC,IClCI,CqB3EC8hC,GrB2EGrzB,ADkCA,IsB7GOywB,GAAAA,CrB2EPzwB,CAASkB,EqB3EFuvB,GAAO,GrB2EM,CAAA,AqB3EF,CAACqC,CrB2EC,KqB3EK;EtB8GpCthC,CAAC,CClCCsK,AqB3EA,CtB6GC,GClCMC,EqB3EDkU,CrB2EClU,CDkCC,KClCDA,CAAOD,AqB3ERmU,GAAW,CrB2EC,CAAC/O,EqB3EE,CAAC8wB,KrB2EH9wB,CAAAA,GqB3EY;EtB8GjCxT,CAAC,CClCCqB,AqB3EA,CtB6GC,EClCDA,EDkCK,CClCC+M,AqB3EA+jB,IrB2EA/jB,AqB3EA+jB,CrB2EK7wB,EqB3EE,IrB2EI,AqB3EA,CAACgkC,KAAK;EtB8GzBvhC,CAAC,CClCC,AqB3EA,CtB6GC,IClCI3B,ADkCA,CClCI,AqB3EHiN,GrB2EG,CAAA,AqB3EHA,ErB2EMjN,CAAIf,AqB3EH,GrB2EGA,CqB3EC,CAACkkC,CrB2EFlkC,EAAKe,CAAK,CqB3EH,CrB2EG,EAAA;EDmC5B4B,CAAC,CsB7GC,CtB6GC,CClCCmP,EAAAA,CAAGf,ADkCA,CsB7GCqQ,GrB2EG,CAACpP,AqB3EJoP,GAAO,IrB2EMjP,AqB3EF,CAAC0tB,CrB2EC1tB,IqB3EI,IrB2EI,CAACpF,IAAI,CAAChM,CAAAA,CAAE,CAAC,EAAEgM,IAAI,CAAChM,CAAE,CAAA,CAAA;EDmC/CnC,CAAC,CClCC,AqB3EA,CtB6GC,IAAI,CsB7GCkP,EAAAA,GAAK,IAAI,CAACq2B,GAAG;EtB8GrBtlC,CAAC,CsB7GC,CtB6GC,GsB7GGykC,ItB6GI,EsB7GJA;ArB4ER,EDkCExkC,CAAC,CsB5GC,CtB4GC,GsB5GG,CAACwjC,GtB4GG,IsB5GI,GAAGt0B,IAAAA,KAASF,EAAAA,KAAOsT,IAAAA,IAASkjB,OAAAA,GAAUpjB,QAAQ,CAAA;ArB4E9D,EDiCEte,CAAC,CsB3GC,CtB2GC,GsB3GG,CtB2GC,AsB3GA,IAAI,CAAC0/B,OAAO,EAAE;EtB4GrBz/B,CAAC,EAAE,CsB3GC,IAAI,CAACmhC,ItB2GI,GsB3GG,CAAClT,IAAAA,CAAK,GAAGhjB,EAAAA;EtB4GzB/O,CAAC,EAAE,CsB3GC,GtB2GG,CsB3GC,CAACyiC,OAAO,CAAC,IAAI,CAAA;EtB4GrB1+B,CAAC,EAAE,CsB3GC,GtB2GG;EACPC,CAAC,EAAE,IAAI;AChCR,EDiCCC,CAAC,CsB1GC,CtB0GC,GsB1GGshC,CtB0GC,MsB1GDA,GAAU,CAAG,EAAA;ArB0Ed,EDiCLrhC,CAAC,EAAE,CsB1GC,GrByEUoP,ADiCP,CsB1GC,CAAC2xB,OAAO,CAAClT,IrByEHze,AqBzEGye,CrByEYxe,AqBzEP,ErByE4B,CqBzEzBtE,CrByE2BuE,EAAqB,CqBzEhDvE,CrByEkD;EAC3E,ADiCA9K,CAAC,EAAE,CCjCCnC,AqBzEA,CrByEAA,EAAWyR,GDiCL,CCjCKA,EAAcC,EAAqBC,EAAAA,EAAAA;EAElD,ADgCA1T,CAAC,EAAE,CChCC,CAACsT,EAAAA,ADgCE,IChCI,CAACC,EAAAA,IAAMD,EAAAA,CAAGrS,MAAM,KAAKsS,EAAGtS,CAAAA,MAAM,EAAE;EDiC3CkD,CAAC,CChCC,AqBzEAmgC,CtByGC,IAAI,CsBzGI,CrByEF,EqBzEGgB,GrByEE,IqBzEFA,GAAUpjB,QAAY,GAAA,CAAA;EtB0GlC9d,CAAC,CsBzGCkgC,CtByGC,KsBzGDA,CtByGO,EsBzGEliB,IAAQkiB,IAAAA,MAAAA,GAAS,CAAI,GAAA,CAAA,GAAIA,MAAAA,GAASA,MAAM;ErB2EnD,AD+BAjgC,CAAC,CsBzGCigC,CtByGC,EC/BEviC,CAAAA,CD+BE,CsBzGI,CrB0EF,CAAA,CqB1EE,CrB0ECyR,GqB1EG,CrB0EIF,AqB1EHwxB,GrB0EGxxB,EAAAA,CAAGrS,CqB1EC,CAAC/B,IrB0EI,AqB1EJA,CAAKE,CrB0EC2C,CAAAA,CqB1EE,CAAC,CrB0ECyR,AqB1EEtU,EAAAA,ErB0EI,EAAA,AqB1EJA,CAAKC,CrB0EC4C,CAAG,CqB1ED,CrB0EC,AqB1EA,CAAGuiC,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;EtB0GhDhgC,CAAC,CC/BCmP,AqBzEA,CtBwGC,CC/BIH,EqBzED,CrByECA,AqBzEA0xB,ErByEE,CAACjjC,AD+BA,CC/BE,CAAA,EqBzEE,CAAC+vB,IAAK,CAAA,GAAG,IAAI,CAAC+S,GAAG,CAAC71B,IAAAA,EAAMF,EAAIw1B,EAAAA,MAAAA,CAAAA;EtByG1C//B,AsBxGA,CtBwGC,CC/BCmP,CD+BC,CC/BIH,GAAAA,EAAE,CAACxR,CAAE,CAAA;ADgCd,CAAC,CsBvGCwjC,ErByEE,EqBzEK,ErByED9xB,CqBzEC,CrByEDA,CAAGE,YAAY,KAAKD,EAAGC,CAAAA,YAAY,IAAIF,EAAAA,CAAGG,KAAK,KAAKF,EAAGE,CAAAA,KAAK,EAAE;AD+BtE,IsBvGI,ErByEE,AD8BApP,IsBvGIghC,GrByEG,AD8BA,GAAG,EC9BE,AqBzERA,GAAW,IAAI,CAACJ,SAAS,KAAK,IAAI,CAACA,SAAS,GAAG,EAAE,CAAD;EtBwGxD3gC,EsBvGE,ItBuGI,EAAE,CsBvGC,IAAIghC,GtBuGG,IsBvGHA,CAAQ,CAAC3pB,GAAAA,EAAK4pB,GAAQ,KAAA;ErB0EnC,AD8BAhhC,IsBvGI8gC,OtBuGO,CsBvGPA,CtBuGS,AsBvGA7vB,IAAI,CAAC,GtBuGG;EC5BrB,AD6BAhR,IAAI,EAAE,AsBxGamX,CrB2EZ,EqB3EYA,ErB2ER,CD6BC;AC5Bd,ED6BElX,MsBzGwB8gC,GtByGf,EAAE,QAAQ;AC3BrB,ED4BE7gC,IAAI,AsB1GuB,CAAA,CtB0GrB,AsB1GqB,QtB0Gb;EACdC,EsB1GE,CAAA,CAAA,CtB0GG,EAAE,QAAQ;EACfC,AsB1GA,MtB0GM,EAAE,QAAQ;AC3BjB,ED4BCC,AsBzGAw9B,KtByGK,EAAE,AsBzGPA,CAAQmD,EtByGE,MsBzGM,EAAE;ArB8Eb,ED4BL1gC,EsBzGE,KrB6EYuK,CqB7ENoM,IrB6Ee/H,AD4BX,CC5BWA,CD4BT,AsBzGN+H,GAAS+pB,ErB6Ee,EAAK,CD4Bf,GsBzGM,GAAA,KAAA,GAAQ,KAAK;ErB8EzC,AD4BAzgC,EAAE,AsBzGA,ErB6EE7C,AD4BA,IAAI,AsBzGAmjC,GrB6EJnjC,CAAQwR,IqB7EO,ErB6EE,CAAA,AqB7EF,ErB6EE,EqB7EE,CAACuxB,SAAS,IAAI,EAAE;EtB0GvCjgC,EC5BE,AqB7EA,KtByGK,AsBzGA,ErB6EE0O,AD4BA,EsBzGE9R,CAAI,GrB6EN8R,AqB7EM,CrB6ECvR,AqB7ED,CtByGE,CsBzGCP,CrB6EC,AqB7EDA,CrB6EEyN,EqB7EEg2B,GrB6EFh2B,CAAAA,IqB7EWvO,CAAAA,MAAM,EAAEc,CAAK,EAAA,EAAA;EtB0G5CqD,IAAI,AsBzGAogC,EtByGE,MsBzGM,CAACzjC,CtByGC,AsBzGC,CAAA,CAAC6Z,MAAO,CAAA,EAAA;ErB+EvB,AD2BAvW,EsBzGE,ErB8EE4M,KD2BK,EAAE,CC3BPA,CAAS4B,MAAS,AD2BH,CC3BG,EAAA;ED4BtBvO,AsBzGA,ErB8EE,ID2BI,EC3BEwO,AD2BA,MC3BS9F,ED2BD,CC3BCA,MAAAA,CAAO+F,MAAM,CAAC,IAAI,CAAA;AqB7ErC,EtByGExO,EC3BE,MAAMwI,AD2BA,EAAE,EC3BFA,GAAOC,GD2BG,GC3BID,CAAAA,IAAI,CAAC8F,MAAAA,CAAAA;AqB9E7B,EtB0GErO,EC3BE,KD2BK,CC3BCwO,CD2BC,GC3BDA,GAAOjG,ED2BE,EC3BFA,CAAK9M,MAAM;AsBhMb,EvB4NbwE,EC3BE,CD2BC,CuB5NgBmgC,CvB4Nd,CC3BClkC,CAAI,GAAA,CAAA,ED2BG,CuB5NMkkC,CAAAA;EvB6NnBlgC,AuB5NAsK,EtBkME,OAAOtO,CAAAA,CD0BE,AuB5NC+iB,CAAAA,CtBkMCzQ,AD0BA,IC1BM,AsBlMF,EtBkME,AsBlMA6xB,EtBkMEnkC,AD0BA,CC1BG,EAAA,CsBlMC,EAAE;EvB6N3BiE,EuB5NE,EtBkMEmO,EsBlME,CvB4NC,AuB5NAqtB,EvB4NE,CC1BC,CAACpzB,EsBlME,EtBkME,CAACrM,AsBlMA+iB,CtBkMA/iB,AD0BC,CC1BC,CAAC,EsBlMH+iB,CtBkMMjV,KAAMqE,CAAAA,MAAM,CAAC9F,IAAI,CAACrM,CAAAA,CAAE,CAAC,CAAA;ED2B3CkE,EC1BE,AsBlMA,IAAI,CvB4NC,AuB5NAkgC,EvB4NE,QAAQ,CuB5NC,GAAG,IAAItiB,GAAAA,EAAAA;EvB6NzB3d,ECzBE,AsBnMA,EvB4NE,EAAE,AuB5NA,CAACkgC,EtBmMEjyB,GDyBG,GCzBHA,CsBnMO,CAAC+xB,MAAAA,CAAAA;EvB6NjB//B,AuB5NA,GvB4NG,EAAE,IAAI;ECvBT,ADwBAC,AuB3NAggC,KvB2NK,ECxBElyB,ADwBA,EuB3NPkyB,CAAUF,GtBmMHhyB,ADwBM,GuB3NG,EAAE;AtBoMpB,EDwBE7N,EuB3NE,IAAI,CvB2NC,AuB3NAiM,EvB2NE,EuB3NFA,MvB2NU,WuB3NVA,EAAS4zB,MAAS,CAAA,EAAA;AtBqM3B,EDuBE5/B,IAAI,AuB3NA,EvB2NE,CCvBCgO,ODuBO,GCvBPA,CAAWC,GAAW,EAAE;EAC/B,ADuBAhO,IAAI,EAAE,CCvBC,CAAC,IDuBI,OCvBJ,EAAa,WAAA,EAAa,aAAA,CAAc,CAACiO,OAAO,CAACD,GAAAA,CAAAA,KAAS,CAAC,CAAA;AACrE,EDuBE/N,EuB1NE,EvB0NE,EAAE,EuB1NE6/B,MvB0NM,UuB1Nah4B,GAAAA,MAAAA,CAAOD,IAAI,CAACkU,iBAAAA,CAASW,SAAS,CAAA;AtBqM3D,EDsBExc,EuB1NE,IvB0NI,EAAE,AuB1NA6/B,QvB0NQ,KuB1NRA,GAAgB,IAAI,CAACH,WAAW;EvB2NxCz/B,EuBzNE2H,KvByNK,CuBzNLA,CvByNO,AuBzNAk4B,QvByNQ,WuBzNW,CAACL,MAAAA,CAAAA,CAAQlqB,OAAO,CAACzH,GAAO,IAAA;EvB0NpD5N,IuBzNI,IvByNI,EAAE,AuBzNAq+B,GAAAA,GAAMkB,EvByNE,IuBzNI,CAAC3xB,GAAI,CAAA;EvB0N3B3N,IuBzNI,EvByNE,EAAE,AuBzNA,CAAC0L,IAAAA,GvByNO,cuBzNPA,EAAS0yB,GAAM,CAAA,EAAA;EvB0NxBn+B,KAAK,CuBzNC,CvByNC,QAAQ;ACrBV,EDsBLC,GAAG,EAAE,ECtBS2N,MDsBD,CCtBCA,CAAQF,GAAW,EAAEJ,MAAiB,EAAED,MAAiB,EAAEQ,OAAkB,EAAE;EAC7F,ADsBA3N,ICtBI,AsBnMA,CtBmMCuN,CDsBC,EAAE,EuBzNE0xB,KtBmML1xB,CAAWC,ADsBA,EuBzNNyxB,CtBmMY,CAAA,CsBnMD,CtBmMC,AsBnMD,CAAC;EvB0NtBh/B,ECtBE,EsBnME,EvByNE,EAAE,CuBzNC,MAAMw/B,CvByNC,KuBzNDA,IAAUH,gBAAkB,EAAA;EvB0N3Cp/B,IAAI,EAAE,AuBzNA++B,QvByNQ,AuBzNA,CAACQ,MAAAA,CAAO,GAAGxB,GAAG,CAACwB,MAAO,CAAA;EtBqMpC,ADqBAt/B,IuBzNI,CvByNC,CCrBCyN,CDqBC,GCrBDA,GAAOR,EDqBE,ICrBI,CAACI,GAAI,CAAA;EACxB,ADqBApN,IuBxNKzE,CvBwNA,AuBxNAA,CtBmMCkS,CDqBC,EuBxNFlS,CtBmMCkS,GAAOV,EDqBE,ICrBI,CAACK,GAAI,CAAA,EsBnMnB7R,EAAQsiC,GAAIjiB,CAAAA,UAAU,CAAKiiB,IAAAA,GAAAA,CAAIjiB,UAAU,IAAI,CAACxO,GAAAA,CAAG,EAAGyH,OAAO,CAAEmW,IAAS,IAAA;EtBqM3E,ADoBA/qB,GAAG,CCpBCkL,CDoBC,CuBxNC,IAAI6f,CvBwNC,CCpBP7f,CAASqC,CsBpMHwd,GtBoMY7f,CAAAA,CsBpMHiC,GtBoMGjC,AsBpMI,IAAA,CAACg0B,GtBoMLh0B,CAASsC,IAAO,CAAA,EAAA,EsBpMG+B,CAAAA,GAAG,CAACwb,IAAO,CAAA,EAAA;EvByNpD9qB,MAAM,EAAE,AuBxNAi/B,QvBwNQ,KuBxNM5pB,CAAAA,GAAG,CAACyV,IAAM6T,EAAAA,QAAAA,CAAAA;EvByNhC1+B,ECpBEuN,IDoBI,CCpBJA,CAAMF,ADoBA,ICpBAA,EAAMC,EDoBE,ECpBIF,EAAAA,OAAAA,CAAAA;EDqBpBnN,CCpBO,GsBpMH,CAAA,CAAA,CtBoMG,CDoBC,EAAE,MAAM;EAChBC,ECpBE2M,AsBpMA,CAAA,CAAA,EvBwNI,ECpBE,ADoBA,CCpBCI,GAAI,CAAA,GAAG1E,ADoBA,KCpBM+E,CAAAA,IAAAA,CAAAA;EDqBtBnN,AuBxNA,MvBwNM,EAAE,QAAQ;ACnBlB,EDoBEC,AuBnNA++B,QvBmNQ,EAAE,KuBnNMtyB,CAAAA,EvBmNE,IuBnNI,EAAEoH,MAAM,EAAE;AtByN3B,EDLL5T,EuBnNE,KtBwNYkN,CDLN,AuBnNA6xB,EvBmNE,ECKavyB,CAAAA,KDLL,AuBnNVuyB,CtBwNwB,EAAExyB,AsBxNbqH,MtBwNgC,AsBxNhCA,CAAO7G,CtBwN2BA,MsBxNpB,CtBwN0C,EAAa;EAC1F,ADLA9M,EuBnNE,ItBwNIkN,EDLE,AuBnNAJ,EvBmNE,GCKJI,EsBxNEJ,CtBwNQhS,EDLE,AuBnNAikC,KtBwNMzyB,CAAAA,MAAAA,CAAAA,GAAUA,IsBxNhByyB,CAAqBxyB,CtBwNI,GAAA,CAACD,CsBxNGwyB,EAAAA,GtBwNHxyB,CAAO,MsBxNJwyB,CAAAA;EtByN/C,ADLA7+B,EuBnNE,ItBwNIgM,AsBxNA,CAACa,CvBmNC,ECKFb,ADLI,GCKGiB,CsBxNG,EAAA,EvBmNE,ECKLA,CAAQxT,MAAM;EAE3B,ADNAwG,ICMI,AsBzNA,CtByNCwK,CDNC,EAAE,GuBnNG,EtByNNA,AsBzNQ,CtByNC6B,EDNE,ICMO,CAAA,EAAA;EDLvBpM,ECME,KDNK,ECMEoM,ADNA,MCMAA,EDNQ;EACjBnM,EuBlNE,MAAMob,CvBkNC,EAAE,OuBlNU,CvBkNF,EuBlNE,IAAI,CAACwjB,iBAAiB,CAAClyB,OAASgyB,EAAAA,UAAAA,CAAAA;EtB0NrDhyB,ADPAzM,EuBlNE,CvBkNC,EAAE,CuBlNCy+B,CtByNNhyB,GAAUA,GDPG,GuBlNPgyB,CtByNIhyB,AsBzNOmyB,ItByNI,CAAA,CAAC,CsBzNE,EAAE;EtB0N1B,ADPA3+B,IuB/MI4+B,EtBsNE/xB,ADPA,EAAE,ICOFA,AsBtNOZ,CAAAA,EtBsNEO,CDPC,GuB/MHP,CAAOO,EtBsNGK,CAAAA,IsBtNI,CAACgyB,CtBsNC,IAAItyB,MsBtNM,CtBsNNA,CsBtNQiyB,UAAYM,CAAAA,CAAAA,IAAI,CAAC,MAAM;EtBuNhE,ADPA7+B,GAAG,CCOC6M,CDPC,CuB/MCb,KtBsNFa,CsBtNEb,CvB+MO,AuB/MAO,OAAO,GAAGgyB,UAAAA;EtBwNvB,ADRAt+B,GAAG,CuB/MC,CtBuNC,ADRA,AuB/MD,EAAG,EtBuNEhG,CAAI,CDRF,ECQE,AsBvNA,CtBuNA,AsBrNT,CAAA,CtBqNYA,AsBrNZ,CtBqNgByR,GAAAA,IAAAA,EAAM,EAAEzR,CAAG,EAAA;EDP/BiG,ECQE2M,GDRG,EAAE,ECQKF,GAAAA,GDRG,ICQI,CAAC1S,CAAE,CAAA;EDPtBkG,ECQE,AsBpNA,CvB4MC,EAAE,CCQC,CAACgK,EsBpNE8Q,IvB4MI,ECQN9Q,CAAS0C,GsBpNPoO,ItBoNiB,CAAA,EAAA;EDP1B7a,AuB5MA,ItBoNI,GDRG,EAAE,QAAQ;EACjBC,AuBxMAo+B,MvBwMM,EAAE,QAAQ,CuBxMEzyB,CAAAA,MAAM,EAAEoH,MAAM,EAAE;EvByMlC9S,ECSE,AsBjNA,KvBwMK,CCSC2F,AsBjNAk4B,CvBwMC,GCSDl4B,GAAOC,EDTE,ICSKD,AsBjNdk4B,CtBiNcl4B,EsBjNE,EtBiNE,CAAC4G,CsBjNC,CAACmxB,KtBiNFnxB,CAAAA,KsBjNa;EvByMxCtM,ECSE,AsBjNA,GvBwMG,ECSE,ADTA,CuBxMC0a,GtBiNGrhB,CAAI,GAAA,ADTA,CCSA,EAAGsS,AsBjNV+O,GAAa,CtBiNIhV,CsBjNF,EtBiNEA,IAAAA,CAAK9M,MAAM,EAAES,CAAAA,GAAIsS,IAAM,EAAA,EAAEtS,CAAG,EAAA;EDRrD4G,EuBxME,EtBiNEoM,ADTA,EAAE,EuBxME0uB,EtBiNJ1uB,CAAO3G,GDTG,CCSC,AsBjNPq1B,CtBiNQ1hC,CAAE,CAAA,AsBjNAoS,EtBiNEA,IsBjNFA,CAAO4yB,CtBiNL5yB,EAAQa,OAASN,CsBjND,CtBiNCA,IsBjNIP,GtBiNJO,CAAAA,EsBjNWqyB,CAAAA,WAAW,GAAG,CAAA,CAAC,CAAA;EvByM/Dn+B,ECSE,AsBjNA,GvBwMG,EAAE,CuBxMCopB,KAAAA,EvBwMO,CuBxMC3jB,MAAOD,CAAAA,IAAI,CAACmN,MAAAA,CAAAA;EtBkN5B,ADTA1S,EuBxME,IvBwMI,EAAE,AuBxMAk6B,IAAAA,GAAOO,CvBwMC,GuBxMDA,CAAKC,GAAG,EAAA;EtBmNvB,ADVAz6B,EuBxME,IAAI1G,CtBkNC+R,AsBlND/R,EvBwMG,EAAE,ECUJ+R,MDVY;ACWrB,EDVEpL,EuBvME,KvBuMK,AuBvMA3G,CAAAA,CvBuME,EuBvME4vB,KAAAA,CvBuMM,AuBvMA1wB,MAAM,GAAG,CAAA,EAAGc,CAAK,IAAA,CAAA,EAAG,EAAEA,CAAG,EAAA;AtBiOrC,EDzBL4G,IuBvMI,GtBgOUiM,GDzBJ,AuBvMAkd,EvBuME,ECyBEld,AsBhOJkd,CtBgOehe,EsBhOR6d,GvBuMG,CCyBc,CsBhOZ,CtBgOc9d,AsBhOb9R,CAAE,CAAA,ItBgO8B,EAAa;EDxBpE6G,GAAG,CuBvMC,CvBuMC,GuBvMGkpB,IAAKhiB,CvBuMA,AuBvMAA,MAAM,CAAC,CAAA,CAAA,KAAO,GAAK,EAAA;EtBiOhC,ADzBAjH,IAAI,EAAE,AuBvMA,CtBgOC2L,KAAAA,CAASV,CDzBF,KCyBEA,EAAQD,MAAQ,EAAA;EDxBhC/K,ECwBiC4L,GDxB5B,EAAE,CCwBkCG,EAAAA,KDxB1B;ECwBmC,ADvBlD9L,CCuBkD,CAAA,EsB7N9C,IAAI+oB,CvBsMC,EAAE,CuBtMHA,KAAS,EvBsME,OuBtMS,EAAA;AtB8N9B,EDvBE9oB,IAAI,EAAE,AuBtMA+Z,QvBsMQ,EuBtMRA,CAAWpN,IAAI,CAAI,GAAA,IAAI,CAACywB,eAAe,CAACtyB,MAAQoH,EAAAA,MAAAA,CAAAA,CAAAA;AtB+NxD,EDxBEjS,IAAI,EAAE,AuBtMA,QvBsMQ;EACdC,IAAI,EAAE,QAAQ;EACdC,IAAI,AuBtMA,EvBsME,IuBtMIyI,IvBsMI,CuBtMJA,GAAQsJ,MAAM,CAAC4W,IAAK,CAAA;EvBuM9B1oB,IuBtMI,EvBsME,EAAE,AuBtMAwZ,QvBsMQ,CuBtMRA,GAAYwgB,OAAO,CAACtR,IAAK,CAAA;AtB+N5B,EDxBLzoB,IuBtMI,EvBsME,CCwBQwL,CDxBN,EuBtME8vB,GAAAA,GtB8NczwB,ADxBR,AuBtMA+xB,CtB8NQ/xB,GAAW,EAAEJ,MAAiB,CsB9NxBiQ,CtB8N0BlQ,AsB9N1BkQ,GAAG,CAAC+N,EtB8NuC,EAAE,AsB9NzCA,CAAAA;EtB+NlC,ADxBAxoB,ICwBI,AsB7NA,CtB6NC2K,CDxBC,EAAE,AuBrMA2O,OtB6NH3O,CAAWC,ADxBA,CuBrMG,EtB6NG,AsB7NH,CtB6NG,EAAA;EDvBtB3K,ECwBE,GDxBG,CuBrMC,CvBqMC,GuBrMGo7B,GAAAA,EvBqMK,EuBrME/hB,SAAUD,CAAAA,MAAM,EAAI,EAAA;EvBsMrCnZ,KAAK,EAAE,CuBpMCoZ,OvBoMO,EuBpMGyiB,CAAAA,MAAM,CAACV,GAAAA,EAAK/yB,KAAO8wB,EAAAA,IAAAA,CAAAA;EtB8NrC,ADzBAj5B,MCyBM6K,CDzBC,CuBpMC,CvBoMC,CCyBHA,GAAOR,IDzBI,ECyBE,CAACI,GAAI,CAAA;EACxB,ADzBAxK,GAAG,EAAE,CCyBC6K,CsB7NO,GtB6NPA,GAAOV,ADzBA,AuBpMA,MtB6NM,CAACK,GAAI,CAAA;EAExB,AD1BAvK,IC0BIsI,AD1BA,EAAE,EuBpME2Q,ItB8NJ3Q,AD1BQ,CC0BCqC,IAASrC,AsB9Nd2Q,CtB8Nc3Q,AsB9NJiyB,ItB8NIjyB,EsB9NE,EAAA,ItB8NFA,CAASsC,IAAO,CAAA,EAAA;EDzBtC3K,EC0BEgL,KD1BK,EC0BLA,AD1BO,CC0BCN,IAAMC,EAAAA,CD1BC,GC0BDA,CAAAA;EDzBhB1K,CC0BO,ED1BJ,EAAE,EC0BE,IAAI,CAACmE,CD1BC,KC0BDA,CAAO6D,SAAS,CAACiD,cAAc,CAAC/C,IAAI,CAAC+B,MAAAA,EAAQI,GAAM,CAAA,EAAA;EDzB/DpK,EC0BEgK,EsB9NE,EvBoME,EC0BE,AD1BA,AuBpMA,CtB8NCI,AsB9NAywB,GtB8NI,AsB9NJA,CtB8NI,GAAGn1B,AD1BA,AuBpMA,CAACm1B,GAAAA,CtB8NKpwB,AsB9ND2N,CtB8NC3N,IAAAA,CAAAA,EsB9NO,EAAE;EvBqM/BxK,KAAK,CuBnMC+J,CvBmMC,KuBnMK,CAACge,EvBmME,EuBnMFA,CAAK,GAAGlgB,KAAAA;AtB8NvB,ED1BE5H,MuBnMM,IvBmMI,EAAE,QAAQ;AC4BtB,ED3BEC,GAAG,EAAE,IAAI;EACTC,IuBlMIk5B,CvBkMC,EAAE,IuBlMI,CAACtR,GvBkMG,CuBlMHA,CAAK,GAAGlP,SAAAA,GAAY,IAAI8hB,SAAUC,CAAAA,GAAAA,EAAK7wB,MAAAA,EAAQge,IAAMlgB,EAAAA,KAAAA,CAAAA;EvBmMjEzH,IuBlMI4Y,EvBkME,EAAE,MuBlMJA,CAAWpN,CvBkMC,GuBlMG,CAACiN,SAAAA,CAAAA;AtB8Nf,ED3BLxY,EuBlME,IvBkMI,CC2BQ2K,CD3BN,QAAQ,EC2BFA,CAAYC,KAAa,EAAEpD,KAAc,EAAEqD,QAAgB,EAAEN,OAAe,EAAE;EAC5F,AD3BAtK,EuBlME,EtB6NEuH,AD3BA,EAAE,GC2BFA,AsB7NKmR,KtB6NK1hB,AD3BA,KuBlML0hB,ItB6NgB,EAAA;ED1BzBzY,AuBlMA,EtB6NE4K,OAAAA,AD3BO,CC2BCC,CD3BC,GC2BG,CAACH,ED3BE,GC2BFA,GAAQ,KAAQC,GAAAA,QAAAA,GAC3B,+BAAA,GAAkCN,OAAU,GAAA,WAAA,CAAA;ED3BhDpK,AuB1LA86B,GvB0LG,EAAE,CuB1LEvxB,CAAAA,MvB0LM,AuB1LA,EAAEoH,MAAM,EAAE;AtBuNzB,ED5BE1Q,EuB1LE,IAAI,EvB0LE,EAAE,AuB1LA,CAACs7B,OvB0LO,IuB1LI,CAAC1vB,IAAI,KAAK,CAAG,EAAA;AtBwNrC,ED7BE3L,IuBzLIuD,MvByLM,AuBzLC0B,CAAAA,CvByLC,KuBzLK,CAACoE,EvByLE,IuBzLMoH,EAAAA,MAAAA,CAAAA;AtBuN5B,ED7BExQ,IC6BI0K,AsBtNA,GvByLG,EAAE,OC6BU,CD7BF,EC6BE;ED5BnBzK,QAAQ,EAAE,QAAQ;EC8BlB,AD7BAC,EC6BA,AsBrNE,EtBqNE9L,CAAKA,ED7BF,CuBxLCikB,CtBqNCjkB,AD7BA,CC6BAA,OD7BQ,CuBxLI,GAAA,IAAI,CAACynC,iBAAiB,CAACzyB,MAAQoH,EAAAA,MAAAA,CAAAA;EvByLpDrQ,EuBvLE,IAAIkY,IvBuLI,EAAE,IuBvLNA,CAAW9hB,GvBuLG,GuBvLG,EAAE;EtBqNzBkC,AD7BA2H,CC6BGuK,EAAAA,CAAKA,AD7BJ,AuBvLAuxB,EvBuLE,EC6BEvxB,CAAAA,CAAElS,AD7BA,CC6BC,CsBpNPyjC,CAASrqB,GAAG,CAAC,IAAI,CAAC4kB,MAAM,EAAEpe,UAAAA,CAAAA;EtBqN9BzN,AD7BAvK,CC6BGsK,EAAAA,CAAKA,AsBpNJ,EvBuLE,EC6BEA,AD7BA,CC6BAA,CAAEC,CsBpNC,IAAI,CvBuLC;AC8BlB,CAAA,CD7BEtK,IAAI,EAAE,QAAQ;AC+BhB,ED9BEC,AuBvLA,OvBuLO,EAAE,QAAQ;AuBtLnB,EvBuLEC,KAAK,EAAE,QAAQ;AC+BhB,AsBtNA,EvBwLCC,OAAO,EAAE,QAAQ;AC+BZ,AsBrNP,EvBuLEC,IAAI,EAAE,CC8BQmK,AsBrNPkxB,OvBuLO,CuBvLE1jB,CtBqNQ7O,AsBrNR6O,CtBqNQ7O,GAAW,EAAE,IsBrNX,EAAEwO,UAAU,EAAE;EtBsNxC,AD9BArX,AuBvLA,MtBqNMmK,AsBrNA4tB,GvBuLG,EC8BH5tB,AD9BK,EuBvLL4tB,CtBqNQlvB,EsBrNE,CtBqNEuB,CAAAA,AsBrNA,CvBuLC,IC8BI,CAAC,GAAA,CAAA;EACxB,AD9BAnK,AuBvLA,MtBqNMyC,AD9BA,AuBvLAA,EvBuLE,EC8BFA,AsBrNAA,GtBqNiB,AsBrNVC,EtBqNY,CD9BT,GuBvLID,CAAAA,IAAI,CAAC2U,UAAAA,CAAAA;EtBsNzB,AD9BAnX,AuBvLA,ItBqNIgE,CD9BC,AuBvLA,EtBqNK,AD9BH,EuBvLExN,CtBqNC,AsBrNG,EtBqNH,CsBrNG,CAAA,CvBuLE,CuBvLCA,CAAAA,GAAIgM,IAAK9M,CAAAA,MAAM,EAAEc,CAAK,EAAA,EAAA;EtBsNtC,AD9BAyJ,EuBvLE,GtBqNG,GsBrNGq7B,EvBuLE,CC8BCnxB,CD9BC,AuBvLJmxB,GtBqNGnxB,AsBrNIqN,ItBqNIvN,CD9BC,IC8BM,CsBrND,CtBqNC,AsBrNAzH,IAAI,CAAChM,CAAAA,CAAE,CAAC;EvBwLlC0J,EC8BE8D,AsBrNA,GtBqNOmG,CsBrNHmxB,GtBqNGnxB,AD9BA,CuBvLHmxB,CvBuLK,EC8BFnxB,CsBrNKmxB,IAAKlkB,CvBuLA,AuBvLAA,MAAM,EAAI,EAAA;EvBwL7BjX,EC8BE,EsBrNE03B,EtBqNE7zB,CD9BC,EC8BDA,AD9BG,CC8BCmD,CsBrNEiD,CAAAA,IAAI,CvBuLC,AuBvLAkxB,CtBqNC,CAAC,EsBrNFA,CAAKtB,CtBqNI,CAAA,EAAA,AsBrNA,EAAA,CAAA;EvBwL1B55B,IC8BI4D,AD9BA,EAAE,CC8BFA,GAAMA,GAAIyC,CAAAA,AD9BA,KC8BK,CAAC,CAAA,EAAG,CAAC,CAAK,CAAA,GAAA,GAAA;ED7B7BpG,AuBvLA,GtBqNS,AD9BN,EAAE,IC8BI,ID9BI;EACbC,AuBtLA,ItBoNIkC,AD9BA,EAAE,CuBtLC03B,CtBoNH13B,CAAK4H,IAAI,CAACpG,AD9BA,AuBtLPk2B,CAAQqB,EtBoNDv3B,CAAAA,AsBpNI,CAAC6zB,OAAAA,CAAAA;AACrB,EvBsLEt3B,IC8BIyD,GAAM,AD9BH,EAAE,CC8BC,EAAA,KD9BO;AuBpLnB,EvBqLExD,KAAK,EAAE,AuBrLAu6B,QvBqLQ,YuBrLaxyB,CAAAA,MAAM,EAAEuyB,UAAU,EAAE;EtBoNhD,AD9BAr6B,AuBrLA,IAAI,CAACq6B,MvBqLM,EAAE,EuBrLI,EAAA,IvBqLI;EC+BrB,AD9BAp6B,EAAE,AuBrLA,EvBqLE,GC8BG8B,IAAAA,CD9BK;AC+Bd,ED9BE7B,QAAQ,EAAE,QAAQ;ACgCpB,ED/BEC,AuBrLA,IAAIkI,CvBqLC,EC+BEuB,AD/BA,IuBrLHvB,GAAUP,CvBqLC,KuBrLDA,CAAOO,CtBoNduB,CAAgB1B,GAAW,EAAE,AsBpNR;EtBqN5B,AD/BA9H,AuBrLA,IAAI,CAACiI,CtBoNCtG,GD/BG,CC+BHA,CD/BK,CuBrLG,CtBoNDwH,CsBpNC,KvBqLK,GC+BIrB,CAAAA,GAAAA,CAAAA;EACvB,AD/BA7H,EuBrLEyH,GvBqLG,EC+BEzD,AD/BA,CuBrLLyD,CAAOO,CtBoNK,IAAA,CD/BC,CuBrLC,GAAGgyB,UAAAA;EvBsLnB/5B,EC+BE,AsBpNA,KtBoNK,ED/BE,EAAE,EC+BE5K,CAAAA,IAAKqM,CD/BC,GC+BK,EAAA;ED9BxBxB,IC+BI,CD/BC,EAAE,CC+BC7K,CAAAA,KAAM,CD/BC,CC+BG,EAAA;ED9BlB8K,AuBrLA,IAAI6H,EtBsNE,CDjCC,EAAE,EuBrLLA,CAAQmyB,KvBqLK,EuBrLE,EAAE;EvBsLrB/5B,EuBnLEqH,GvBmLG,EAAE,CuBnLEO,CAAAA,MvBmLM,CuBnLC,GAAGA,OAAUrG,GAAAA,MAAAA,CAAO0B,MAAM,CAAC,CAAA,CAAA,EAAI2E,OAAS,EAAA;EvBoLxD3H,ICiCI2D,AsBrNqDm2B,EvBoLnD,CCiCIn2B,CDjCF,ECiCEA,CsBrN+Cm2B,EtBqN/Cn2B,AsBrNwD,GvBoLlD,CCiCCA,CsBrNsD,EtBqNnD,CAAC3O,CAAE,CAAA;EDhCvBiL,ECiCE,EsBtNuE+5B,CvBqLpE,EAAE,QAAQ,AuBrL0DA,EAAa,CAAA;EvBsLtF95B,ECiCE,AsBvNsF,CvBsLrF,AuBtLqF,CAAA,CvBsLnF,ICiCIyD,GAAAA,CDjCI;ECkCb,ADjCAxD,CCiCA,GDjCI,EAAE,QAAQ;ACkChB,EDjCEC,AuBtLA,IvBsLI,EAAE,CuBtLCuH,OvBsLO,AuBtLPA;AtByNF,AsBxNP,EvBsLEtH,IAAI,EAAE,CCkCQ8I,ODlCA,SCkCAA,CAAiBxF,GAAc,EAAE6D,GAAW,EAAa;AuB9WzE,EvB+WE,ADlCAlH,MCkCM8I,CuB/WCixB,CxB6UC,EAAE,ICkCJjxB,EDlCU,AwB7UTixB,CvB+WU3xB,AuB/WA4U,KAAK,EAAEgd,KvB+WK,CAAC9yB,GAAI,CAAA,KAAKkB,AuB/WA,EAAE,UvB+WU,CAAClB,GAAAA,CAAI,GAAG0B,eAAAA,CAAgB1B,GAAG,CAAA,CAAA;EAC9E,ADlCAjH,AwB7UA,MxB6UM,AwB7UAkiB,CvB+WCrZ,CDlCC,EwB7UKkU,GAAAA,EvB+WG3Z,CAAAA,ADlCA,EwB7UH2Z,CvB+WG3Z,CAAAA,EuB/WM2Z,KAAM3V,CAAAA,OAAO,IAAI,CAAA,CAAC;AvBgX1C,EDlCEnH,AwB7UA,GxB6UG,EAAE,CwB7UCkG,OxB6UO,AwB7UPA,GAAU+b,IAAAA,CAAK/b,OAAO;AvBiX9B,EDnCEjG,AwB7UA,GxB6UG,EAAE,CwB7UC/N,GAAAA,ExB6UK,CwB7UC+vB,IAAK/vB,CAAAA,GAAG,KAAKiC,SAAAA,GAAY2lC,eAAAA,GAAkB,CAAC;ExB8UxD55B,AwB7UA,KxB6UK,CwB7UCjO,CxB6UC,EwB7UDA,GAAMgwB,GxB6UG,CwB7UEhwB,CAAAA,GAAG,KAAKkC,SAAAA,GAAY2lC,eAAAA,GAAkB,CAAC;AvBiXzD,EDnCC35B,AwB7UA,MxB6UM,CwB7UC,CxB6UC,QAAQ;ACoCX,EDnCLC,EAAE,AwB7UAuM,ExB6UE,GCmCU9D,AuBhXL3C,EAAAA,GxB6UG,IwB7UHA,EvBgXiBrS,CAAAA,AuBhXP5B,GvBgXkB,AuBhXlBA,EvBgXoB,CuBhXdC,GAAG;EvBiX5B,ADnCAmO,EwB7UEuM,GxB6UG,AwB7UE1G,EvBgXArS,ADnCA,AwB7UAqS,GvBgXArS,CAAI+O,GuBhXJsD,CxB6UQ,ECmCE,AuBhXAhU,CvBgXC,CAAA,CAAA,AuBhXDA,CvBgXI4W,EuBhXE7W,SvBgXS,EAAK4B,GAAAA,GAAAA,CAAIiR,KAAK,CAAC,CAAA,CAAA;AACjD,EDnCExE,AwB7UA,CAAA,ExB6UG,EAAE,QAAQ;AwB5Uf,ExB6UEC,ICqCWwI,ADrCP,EAAE,KCqCe,GAACrE,ADrCR,KCqC2B,IAAA,OAAOA,KAAAA,KAAU,WAAA;AAAY,AuBhXxE,ExB4UElE,OwB5UOu5B,ExB4UE,EAAE,OwB5UJA,CxB4UY,AwB5UAnoB,MAAM,EAAEC,MAAM,EAAEioB,eAAe,EAAE;ExB6UpDr5B,AwB5UA,ExB4UE,ECqCSuI,ADrCP,AwB5UA8wB,QxB4UQ,ECqCY,GAACp1B,EuBjXrBo1B,GvBiX0E,EuBjXtD,EvBiXsD,GuBjXjD,EAAE,EvBiXsDp1B,KAAAA,KAAU,UAAA;AAEjG,EDtCEhE,EwB5UE,GxB4UG,EAAE,EwB5UE,KAAK;AvBkXhB,ADrCA,CAAC;ACsCYuI,ADrCb,EwB5UE,IvBiXWA,EuBjXLhT,CxB4UC0K,AwB5UD1K,GAAI4jC,GvBiXC5wB,ADrCE,GCqCU,ADrCP,CCqCWlW,CAAAA,CuBjXjB8mC,CvBiX4B7mC,AuBjXlB4e,CvBiXgC,KAAA,AuBjXxBkoB,EAAAA,eAAAA,CAAAA;EvBkX5B,ADrCA,AwB5UA,IvBiXI/mC,CAAEmW,CAAAA,ADrCAtI,AwB5UAwH,CAAAA,GvBiXI,AuBjXAyxB,IxB4UI,CCqCC7mC,CAAAA,CAAEkW,ADrCA,CAAC,CAAC,AwB5UT2wB,CAAUhoB,CvBiXC,EAAE,GuBjXKioB,EAAAA,eAAAA,CAAAA;ExB6U5B,AwB3UA,EvBgXE,IDrCIj5B,CwB3UC,EvBgXE,CDrCC,GAAGC,CCqCC,KDrCK,CAACD,IAAI,CAACvJ,OAAO,CAAC;EACjC,EwB3UE6e,GAAAA,CxB2UIpV,CwB3UCqH,CAAAA,CAAEwE,ExB2UE,CwB3UC,ExB2UE9L,MAAM,CAACD,IAAI,CAACzL,GAAG,CAAC;ECuC9B,ADtCA,EwB3UEsb,ExB2UE7b,CCsCC,ADtCA,EAAEmM,AwB3UL0P,CxB2UM,CwB3UCza,CxB2UCzB,AwB3UDyB,CvBiXEkT,ADtCA,AwB3UAyD,ExB2UE3L,CwB3UC,CvBiXHkI,ADtCI,EAAEjI,ECsCEnO,ADtCA,CCsCG,EAAA;EDrCtB,ECsCE,AuBjXAqjB,GxB2UGvhB,CCsCC,ADtCA,CCsCC7B,CAAAA,AuBjXLojB,CvBiXOhN,ADtCA,CAAC,AwB3UAhB,CAAAA,CvBiXE,ADtCAvT,AwB3UA8X,CvBiXCxD,ADtCA,GAAGtI,CCsCI,AuBjXH,CvBiXG,EAAA,ADtCA,CAAC9M,MAAM,EAAEc,CAAC,EAAE,EAAE;IAChCoM,AwB3UAwP,EvBiXE,ADtCA,EwB3UFA,CxB2UKvP,CwB3UCjL,CxB2UC,AwB3UDA,CAAE0W,CvBiXC,CDtCC9L,ICsCI,ADtCA,CAAChM,CAAC,CAAC;EwB1UnB,CAAA,CxB2UE,KAAKmM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAAChN,MAAM,EAAEiN,CAAC,EAAE,EAAE;AwB1UvC,EvBiXE,IDtCIxM,CAAC,GAAGuM,KAAK,CAACC,CAAC,CAAC;AwBzUlB,EvBiXE,IDvCIE,EAAE,CCuCC,AuBjXA84B,ExB0UE94B,ECuCE,ADvCA,CAACC,CwB1UL64B,CAAOt1B,KxB0UK,AwB1UA,CxB0UClQ,CAAC,AwB1UA,ExB0UEY,GAAG,CAACZ,CAAC,CAAC,CAAC;ACwChC,CAAA,CuBjXE,ExB0UE,EwB1UE0N,CAAAA,EAAGxO,CAAAA,EAAGV,CAAGlB,EAAAA,CAAAA;AvBmXf,EuBjXE,ExByUE0C,CAAC,CwBzUCuQ,ExByUE3D,EwBzUF2D,MxByUU,CAACzN,OAAO,CAAC2J,EAAE,AwBzUrB8D,CxByUsB,CwBzUbL,CxByUe,EAAE,CAAC,CwBzUV,CAAA,EAAA;IxB0UnB9D,AwBzUAsB,CAAAA,GAAIwC,IxByUI,CAACxD,AwBzULwD,CAAMyR,CxByUC,CAAC,CwBzUC,ExByUE,CAAC3hB,CAAC,IAAI,EAAE,GAAG,IAAI,EAAEA,CAAC,IAAI,CAAC,GAAG,IAAI,EAAEA,CAAC,GAAG,IAAI,CAAC;EAC1D,EwBzUEd,CAAAA,GAAIgR,KAAAA,CAAMgM,KAAK;AvBkXlB,EDxCC,EwBzUE1d,CAAAA,GAAI0R,CxByUC9D,IwBzUD8D,CAAM0R,GxByUG,GwBzUG;AvB8WpB,ADpCA,IwBzUItkB,CAAAA,GAAI4S,KAAAA,CAAM+L,IAAI;AvBiXX,ADtCP,GwB1US,CxB0ULpP,KCsCYgI,ADtCP,AwB1UA,avBgXqBlW,CAAAA,CAAa,EAAE;ADrC7C,ECsCE,EuBhXE+O,CAAIxO,GAAAA,CvBgXCP,ADtCAmO,AwB1UD5N,CvBgXCP,CAAE4P,CuBhXC/P,CAAAA,EvBgXG,CuBhXClB,CAAI4S,CxB0UF,CAAC7Q,CCsCC,AuBhXA6Q,ExB0UE,EAAE,CwB1UJA,IvBgXavR,IAAAA,CAAAA,CAAE4P,IAAI,KAAK,OAAA,IAAW5P,CAAE4P,CAAAA,IAAI,KAAK,aAAA;AAClE,EDtCE,IAAI,CAAC1B,KAAK,EAAE;EwBxUZ,ExByUEA,KAAK,AwBzUA,GxByUGV,MAAM,EAAE;AEvXpB,IFwXIU,AwBzUA8U,GAAKjU,ExByUA,AwBzUAA,CxByUCX,AwBzUDW,WxByUY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAClC,EwBzUEwO,KAAOhd,EAAAA,CAAAA;ExB0UT,EwBzUE0iB,IxByUIrjB,CAAC,CwBzUGC,ExByUAqO,AwBzUArO,CAAAA,IxByUK,CAACa,GAAG,CAAC2N,WAAW,EAAE,CAAC;AEvXnC,EFwXC,EwBzUEiP,IAAM3e,CxByUDiB,CAAC,AwBzUAjB,CAAAA,GxByUI;AEtXP,IFuXH4B,AwBzUAumC,CxByUC,CEvXQ3wB,CFuXNvW,CEvXWf,AFuXV,CAAC,CAAC,CEvXQA,AFuXP,CwBzUPioC,EAAUv1B,CtB9CI1S,CAAKsX,EAAAA,CsB8CT5E,KAAU;AtB9CE,EsB+CxB,CAAA,CxByUE/Q,CAAC,EAAEZ,CAAC,CAAC,CAAC,CAAC;AEvXJ,AsB+CP,IxByUIC,CAAC,CExXQuW,CFwXNxW,CAAC,CExXW,AFwXV,CAAC,CAAC,CExXQ,CAAA,GAAIuW,EAAAA;AAAG,AsBiD1B,IxBwUIvW,CAAC,EAAEA,CAAC,CAACgB,AwBxUAmmC,MxBwUM,KAAK,CAAC,GAAGnnC,CAAC,CAAC,CAAC,CAAC,GAAG,CwBxUEwkB,CAAAA,KAAK,EAAE4iB,aAAa,EAAE;AtBhDhD,EFyXL,AwBxUA,CxBwUC,GEzXU3wB,EsBiDL3I,GtBjDa0I,CsBiDb1I,EtBjDa0I,CsBiDN,EtBjDMA,AsBiDJ,GtBjDUD,EAAAA;AAAG,AF0X9B,EwBxUE,MAAM8wB,QAAAA,GAAW7iB,KAAM8iB,CAAAA,sBAAsB,CAACF,aAAAA,CAAAA;AtBjDnC1wB,AF2Xb,EwBzUE,ItBlDWA,AF2XPhI,AwBzUA5M,CAAGyR,EAAAA,GxByUG,CwBzUHA,CtBlDImD,CF2XE,EE3XSxE,MAAOyE,CAAAA,iBAAAA,4EF2XsF;AE3XpE,AF4XjD,EwBxUE,KAAK7U,CAAAA,CxBwUE6M,EwBxUE,CAAA,EAAG4E,GxBwUG,CAACzS,AwBxUGumC,GxBwUA,AwBxUAA,ExBwUE,MwBxUFA,CAASrmC,MAAM,EAAEc,CAAAA,GAAIyR,IAAM,EAAA,EAAEzR,CAAG,EAAA;AtBnD9C,EF4XL,EwBxUEgM,EtBpDS8I,EF4XLjU,AwBxUJmL,CxBwUK,AwBxUA4H,GxBwUGhH,CwBxUC,CAAC24B,GtBpDa9wB,CF4XT,CAAC3T,CE5XQ2T,EAAAA,AsBoDL,CxBwUC,AwBxUAzU,CxBwUChB,AwBxUDgB,CtBpDS,AsBoDP,CAAC6R,CxBwUC,CE5XK,AF4XJ,GwBxUG,CAAA;AtBpDK,EF6XlC,AwBxUA,IxBwUI3T,CAAC,GAAG,GAAG;AE5XN,EF6XL,AwBxUA,ItBrDW6W,AF6XPlW,CAAC,EAAEC,AwBxUAkN,CxBwUC,EAAE7N,CE7XWsW,AF6XV,AwBxUJzI,GtBrDcyI,EAAAA,GAAK,CAAA;AAAE,AsBsD9B,ExBwUE,IAAI,CAAC5T,CAAC,EAAE;AE7XH,AsBuDP,IxBuUI,EE9XSmU,GsBuDJywB,OtBvDiBhxB,GAAAA,AsBuDjBgxB,CAAWC,CtBvDMjxB,GAAK,CAAA,AsBuDN,EAAE5E,KAAK,EAAE81B,OAAO,EAAErzB,OAAAA,GAAU,CAAA,CAAE,EAAE;AtBvDxB,EF+X/B,AwBvUA,MAAMtG,IAAAA,GAAO05B,KAAAA,CAAM15B,IAAI;AtBvDZiJ,EF+XX,AwBvUA,ItBxDWA,AF+XPpU,CAAC,CAAC,AwBvUA+kC,CxBuUC,CAAC,KAAK/mC,CAAC,EAAE,AwBvUV+mC,CtBxDK3wB,EsBwDQ3C,CtBxDQmC,EAAK,GAAA,CAAA,AsBwDL+S,CAAAA,EtBxDS,CAAA,CsBwDL,KAAK,QAAA;AtBxDE,EsByDtC,ExBuUE,EwBvUExnB,CAAAA,EAAGyR,CxBuUC1U,CAAC,EwBvUF0U,CxBuUK,CAAC5Q,AwBvUA+Q,CxBuUC,CAAC,CAAC,CAAC,QwBvUUi0B,EAAAA,UAAAA;AtBvDhB3wB,EsByDX,ExBsUEhX,CAAC,CE/XQgX,AsByDPrF,ExBsUEhP,CAAC,CAAC,CE/XGqU,AF+XF,AwBtULrF,CxBsUM,EE/XS1S,CF+XNG,CwBtUC,EtBzDU4X,AF+XR,CE/XQA,AF+XPnY,CAAC,AwBtUA,CxBsUC,CwBtUC,EtBzDImY,AF+XFlY,GAAG,CAACD,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;AE/XZ,EFgY9B,EwBtUE;AtBzDSoY,EFgYXtW,CAAC,GEhYUsW,AFgYP,CAACtU,CAAC,CAAC,CEhYIsU,AFgYH,CAAC,EEhYShY,IAAKgY,CAAAA,IAAAA;AAAK,EFiY5BrW,AwBrUA,CxBqUC,GAAG,CAAC+B,AwBrUAb,CxBqUC,AwBrUDA,CxBqUE,CAAC,CAAC,A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wBzUxB+oC,CxByUyB,AwBzUA7c,GxByUG,CwBzUC,EAAE,ExByUE,GAAG9rB,IAAI,CAAC6P,GAAG,CAACjQ,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK;AACnF,EwBzUE,IxByUIkQ,EwBzUEjB,ExByUE,EwBzUFA,CxByUKjP,CAAC,CwBzUCkP,GxByUGlP,CAAC,EwBzUGiP,CAAAA,CxByUC,GwBzUG,CAACid,GxByUG,CwBzUHA,CAAAA,CxByUMlsB,CAAC,GAAG,KAAK,GAAGI,IAAI,CAAC6P,GAAG,CAAC,CAACjQ,CAAC,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;AAC/E,EwBzUE,MAAMgpC,CxByUC74B,IwBzUO,GAAA,IxByUI,AwBzUA7M,CxByUC8M,IAAI,AwBzUCnB,CAAAA,CxByUCoB,GwBzUDpB,CxByUK,AwBzUA9M,ExByUEmO,CAAC,EAAE,CwBzUC,CAAA;AtBzDpC,EFmYC,AwBzUA,IAAIrN,CAAAA,CxByUEnB,CAAC,AwBzUA4S,GxByUGxE,CwBzUGkF,EAAAA,CxByUC,CAAC1U,CwBzUF0U,ExByUK,CAAChF,IAAI,CAACtO,CAAC,CAAC,CAAC;AElYtB,EFmYL,AwBzUA,KAAKmB,CxByUClB,AwBzUDkB,CtB1DS6V,AFmYP,EwBzUE,CxByUC5I,AwBzUD,EAAGwE,ExByUE,CAAChU,CwBzUIuO,CtB1DM6D,CAAAA,AFmYP,CAAC1C,AwBzUAnB,ItB1DmB,AFmYf,AwBzUJA,CxByUKlN,AwBzUAI,CtB1DgB,AFmYf,CAAC,CAAC,GwBzUG,EAAEc,CAAAA,GAAIyR,IAAM,EAAA,EAAEzR,CAAG,EAAA;EtBzD/C,AFmYA,EwBzUEmS,GAAMnG,CtB1DF8J,AFmYA3X,CAAC,CwBzUC6N,ExByUEiB,EEnYJ6I,AsB0DM,CAAC9V,CxByUC,AwBzUC,CtB1DU,AFmYVvC,AwBzUA,EtB1DY,CFmYT,CAAC0P,IAAI,CAAChP,CAAC,CAAC,CAAC;EElY3B,AFmYA,EwBzUE4nC,ItB1DIhwB,CFmYC,AwBzUA,CAAC/V,CAAAA,CtB1DF+V,AsB0DI,GtB1DG5Y,AsB0DA,ItB1DK4Y,CAAAA,IAAI,CAAClG,KAAAA,CAAAA;EACvB,EFmYEhR,CAAC,CEnYCmB,AsB0DAoB,CtB1DApB,AFmYCxC,AwBzUE2U,EAAAA,CxByUC,CAACpF,CwBzUFoF,CxByUI,CAACtT,CAAC,GAAGwO,CAAC,IAAIJ,IAAI,CAACxP,GAAG,CAAC2P,IAAI,CAACvO,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;EEjY7C,EFkYEC,CAAC,CwBzUCyU,CtBzDCvT,AFkYAxC,AwBzUEyrB,CtBzDE,CsByDFA,CxByUC,CElYC,AFkYAlc,CElYA,CFkYE,AwBzUA,CtBzDC/M,AFkYAlB,AwBzUAqT,CtBzDI4D,AFkYH,EwBzUG,CtBzDAA,AFkYA1I,CAAC,GElYD0I,CFkYK9I,CElYCjN,CAAK,EAAA,AFkYF,CAACvC,CElYC,EFkYE,CAAC2P,IAAI,CAACtO,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IEjY3C,AFkYAX,AwBzUA,CxByUC,AwBzUD,ExByUGX,CElYCqS,EFkYE,CAAC9C,EElYH8C,AFkYK,CAAC1R,CAAC,CElYC6B,CAAAA,CFkYEqN,CAAC,GElYG,CAAG,AFkYFJ,EElYE,EFkYE,CAACxP,GAAG,CAAC2P,IAAI,CAACjP,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;EwBxU7C,ExByUED,CAAC,CElYC4X,CFkYC3I,IAAI,CElYL2I,AFkYM5X,CElYC0V,AFkYA,GAAGvG,CElYC,AFkYA,CElYCrN,CAAAA,CAAAA,CFkYGoN,IAAI,CAAClP,CAAC,GAAGiP,IAAI,CAACjP,CAAC;EAClC,AwBzUA,CxByUC,GElYG4X,GsByDGiwB,GtBzDInyB,CAAAA,CsByDJmyB,GtBzDQ,CAACl2B,KAAQ7P,GAAAA,CAAAA,CAAAA;AFmY1B,AwBzUA;AxB2UA,AwBzUA,EtB1DE,OFmYOsN,AwBzUA04B,MxByUM,CAACjpC,CAAC,CwBzUEkrB,CxByUAjoB,AwBzUAioB,CxByUC,EAAE1a,EwBzUE,EAAE0O,CxByUC,EAAE,CwBzUC,EAAE;EtBzD9B,AFmYA,A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,GAAAA,IsB+CZ+vB,CtB/CY/vB,AsB+CKgwB,CtB/CCrnC,KsB+CK,CtB/CC,CsB+CCsnC,CtB/CCxmC,CAAAA,GAAIyR,GsB+CG,CtB/CHA,CsB+CKg1B,CtB/CCzmC,CAAK,EAAA,EAAA,IsB+CI,EAAE;ExBuUtD,AwBtUA,EtB/CE6P,EFqXExP,EwBtUEqmC,CtB/CJ72B,EFqXO,CErXC0G,AFqXAjW,IwBtUJomC,CtB/CS,CAAC1mC,CAAE,AFqXD,AwBtUAumC,CtB/CC,AFqXA14B,CErXC2I,IFqXI,AwBtUA,CxBsUC,AwBtUAgwB,ExBsUE,CErXE,CAAA,IsB+CK,CAAA,KAAKD,MAAM,CAACC,QAAAA,CAAS,GAAG,CAAA,CAAC,CAAA;EAC1D,EtB/CE,AFqXA,IErXI,AFqXA34B,CErXCsI,AsB+CAuwB,IxBsUI,CErXJvwB,AFqXKjX,CErXC2Q,EsB+CE,CAAC42B,EtB/CK,AFqXH,CErXG,EAAA,CFqXC,CAAC,EAAE,CwBtUTA,CAAW,KAAKC,QAAQ,CAACD,UAAAA,CAAW,GAAG,CAAA,CAAC,CAAA;AAC1D,MtB/CM10B,AFqXAhV,CAAC,GAAG,EErXJgV,CAAO1U,GAAG,GAAGF,IAAAA,CAAKE,GAAG,CAAC0U,MAAAA,CAAO1U,GAAG,EAAEwS,KAAAA,CAAAA;AsBiDxC,MtBhDMkC,EFoXKlT,CAAC,AwBpUH8nC,ExBoUK94B,CEpXRkE,CAAO3U,GAAG,AFoXG,CAAC,CAAC,CEpXFD,AFoXG,IEpXHA,CAAKC,GAAG,CAAC2U,AsBgDnB40B,CAAoBjB,KtBhDD3zB,AsBgDM,CtBhDC3U,CsBgDCwpC,EtBhDE,EAAE/2B,EsBgDE,EAAEg3B,CtBhDJh3B,CAAAA,MsBgDY,EAAE3B,IAAI,EAAE;EAC1D,KAAK,CxBmUiBpP,CAAC,EAAE+O,EwBnUdoO,GxBmUmB,CAAC,AwBnUZ2qB,CxBmUa,CAAC,EwBnUdA,MAAAA,CAAOE,uBAAuB,CAAC54B,IAAAA,CAAAA,CAAMmD,OAAO,EAAI,EAAA;EtB/CnE,EsBgDE,IxBkUiClT,CAAC,CwBlU5B0R,CxBkU8BhC,IwBlUtB63B,CxBkU2B,CAAC,CAAC,AwBlU7BA,CxBkU8B,IwBlUzB,CAACzpB,IAAAA,CAAKpK,KAAK,CAAC;AtB/CnC,IsBgDI,IxBiU8C3T,AwBjU1C,CxBiU2C,EAAE,KwBjUhC2R,IAAAA,KAAAA,GAAQ,CAAA,IAAO,CAACg3B,QAAAA,IAAYh3B,KAAAA,GAAQ,CAAI,EAAA;AtB9CtD,MF+WiD,AwBhUlD,CxBgUmD,EE/WzC4G,IsB+CHwF,IAAAA,CtB/CavF,AsB+CR7E,CtB/CQ6E,IsB+CH,GtB/CkB,EAAE;EACzC,IF+WI,GE/WGA,CF+WC7I,KAAK,CE/WN6I,AF+WOxX,IE/WIuV,EAAAA,AF+WE,GE/WG,AF+WA,CAAC,EE/WC,AF+WC,CE/WD;AAC3B,EsB+CE,MxBgUM1X,CAAC,CAACmB,CAAC,GAAGV,GAAG,CAACqQ,KAAK,CAAC,CAAC,CAAC,CAAC;AE7WpB,EsB+CL,IxB+TI,GE9WU8I,AsB+CP,IAAI,KtB/CaC,CAAAA,OAAe,EAAE;AsBgD3C,EtB/CE,EF8WE,KE9WKA,OAAAA,IAAW,GAAA,GAAMnC,EAAC,CAAA;AAC3B,AsBgDA,ExB8TE,CAAC,MAAM,AwB9TAsyB,YAAaC,CAAAA,UAAU,EAAElS,MAAM,EAAE;AtB9C1C,EsB+CE,ExB8TE/3B,CAAC,GAAG0Q,AwB9TA,KxB8TK,CAACI,KAAK,EAAE;IwB9TZ6U,ExB8Ta7jB,CAAC,EAAE,AwB9TX,CxB8TY;IwB9TVooC,ExB8TYnoC,CAAC,EAAE,CAAC,KwB9THmd,EAAAA;EAAAA,CAAK,GxB8TA9d,AwB9TG6oC,CxB8TF,EAAE,CAAC,MwB9TDA;EACnC,IxB6TsC9oC,CAAC,CwB7TjCqoC,CxB6TmC,KwB7TnCA,GAAS7jB,KAAMwkB,CAAAA,OAAO,KAAKxkB,KAAMwkB,CAAAA,OAAO,GAAG,CAAA,CAAC,CAAA;EAClD,ExB4T0C,CAAC,CAAC,EwB5TtC;AtB3CP,IFwWGnqC,AwB7TKwf,CxB6TJ,CAACre,CAAC,GAAGV,AwB7TD+e,GxB6TI,CAACxf,CAAC,CAACmB,CAAC,CAAC;AEvWX,EFwWL,EwB9Te0oC,KtB1CD/vB,CsB0CC+vB,atB1CcxlC,CAAAA,CAAS,EAAE;EACxC,AFwWA,EwB/TuByQ,EtBzCnB,CAACiF,EFwWE/Z,AwB/TuB6U,CxB+TtB,CwB/TsBA,UtBzCzBkF,CAAe1V,CAAI,CAAA,EAAA;AFyW1B,EwBhUgCwQ,CAAa,CtBxCzC,EsBwC4CqK,IAAAA;AxBiUhD,EwBhUE,MAAMkrB,CxBgUCr5B,IwBhUDq5B,GAAQ5qB,MxBgUM,AwBhUNA,CxBgUOvd,AwBhUAyd,GxBgUG,CwBhUC,CxBgUC;EEvW1B,AFwWA,AwBhUA,ItBxCIne,AFwWAU,CExWI,CsBwCFooC,CxBgUC,CExWC,AFwWAr5B,CExWA,EsBwCFq5B,GxBgUQ,AwBhUAR,CxBgUC,CAAC,CAAC,GwBhUHA,CAAOnqB,CxBgUC,GAAG,AwBhUA,ExBgUE;EEvW3B,AsBwCA,ExBgUE,EExWE5N,CAAI,CsBwCFsD,EtBxCE,CAAA,AFwWCtF,AwBhUHsF,GAAM+zB,KxBgUK,CAAClnC,GAAG,CAAC,CwBhUEud,CAAAA,MAAAA,EAAQqqB,MAAQ3qB,EAAAA,IAAAA,CAAAA;EtBvCxC,AFwWA,AwBhUA,MAAMxK,CtBxCCtU,GsBwCDsU,CtBxCCtU,CAAKL,CsBwCCg4B,ItBxCI,CAAC1zB,CAAI9C,AsBwCTw2B,CAAO51B,EtBxCEZ,CAAAA,CAAAA,EsBwCI,CtBxCCA,CAAAA,KAAM8C,CAAG,EAAA;EFyWpC,AwBhUA,EtBxCE9C,CAAK,CsBwCHonC,GtBxCG,AFwWA9kC,EExWA,AsBwCH8kC,MxBgUW,CAAC1mC,GAAG,CAAC;AACtB,EwB/TE,EtBzCE6P,CAAAA,EAAAA,AsByCG,IAAI7O,CAAI,GAAA,CAAA,EAAGA,CAAIyR,GAAAA,IAAAA,EAAM,EAAEzR,CAAG,EAAA;AxBgUjC,EExWE,EsByCE,ExB+TEgO,IwB/TIsG,CxB+TC,CAAC,EwB/TFA,GAAOwgB,MAAM,CAAC90B,CAAE,CAAA;EtBxCxB,AFwWAiO,EwB/TE,KtBzCKY,CAAAA,AsByCC,GxB+TG,CAAChB,KAAK,EAAE;AEvWrB,IFwWI,EwBhUO,CAACs5B,CxBgUJt5B,IwBhUIs5B,CxBgUC,EwBhUOt1B,KAAAA,KxBgUK7D,KAAK,EAAE;AEtWhC,MFuWM,AwBjUqB,CAACo5B,KAAM,CxBiUrBv5B,EwBjUuBgC,GxBiUlB;AEtWX,IFuWH,AwBlUqC,CAAC,GAAGyE,CtBrC7ByC,GsBqC6BzC,ctBrC7ByC,CACdC,WAAkB,EAClBC,UAAiB,EACjB;EACA,EFoWE,AwBlUA,ItBlCIC,EFoWEhJ,AwBlUAm5B,IxBkUI,GAAG,GwBlUPA,GAAa/yB,CxBkUCzG,GEpWMoJ,AsBkCP3C,CAAK4yB,CxBkUC,CEpWCjwB,KsBkCK,KtBlCLA,AsBkCU3C,CtBlCClT,CAAC,EsBkCG8lC,CtBlCAlwB,AsBkCAkwB,OAAO,GAAG,CtBlCVlwB,AsBkCU,CtBlCE5V,AsBkCD,CtBlCE,AsBkCF;EtBjCtD,EFoWE,AwBlUAskC,ItBlCIvuB,AFoWApa,CAAC,AwBlUL2oC,GAAQ2B,UAAU,CAACD,ItBlCOnwB,CsBkCPmwB,CAAM,CtBlCCnwB,EsBkCEqvB,QtBlCFrvB,CAAW1D,CAAC,GAAGyD,GsBkCbsvB,CAAiBC,MAAAA,CtBlCJvvB,CAAYzD,AsBkCApB,CtBlCC,EsBkCIN,EAAAA,KAAAA,CAAAA;EtBjC5D,EFoWE,AwBlUA6zB,ItBlCItuB,AFoWAlJ,CwBlUC,CAAC0D,ExBkUE,KAAK,KwBlUPA,CAAa,ExBkUE,CwBlUC/B,CxBkUC,IwBlUDA,CtBlClBuH,GAA2Bja,IAAK4Y,CAAAA,IAAI,CAACmB,mBAAAA,GAAsBA,mBAAAA,GAAsBC,mBAAsBA,GAAAA,mBAAAA,CAAAA;EAE7G,EsBkCEuuB,EtBlCEruB,AFmWAta,CAAC,EwBjUGuqC,CxBiUA15B,AwBjUA05B,CtBlCInqC,GAAAA,AsBkCA,GAAGwpC,CtBlCHxpC,CAAKma,CFmWC,CAACzJ,GEnWG,CAACsJ,CFmWC,CAAC,SwBjUUuuB,CAAAA,KAAAA,EtBlCSxuB,AsBkCF0vB,EtBlCE1vB,IsBkCF0vB,EAAQ,IAAI,EAAE3qB,IAAAA,CAAK/N,EtBlCjBgJ,CAAAA,CsBkCqB,CAAA;EtBhCjE,EFkWE,AwBjUAwuB,CxBiUC,CElWCruB,GsBiCIkwB,CAAAA,CtBjCJlwB,AFkWK,GElWI,CAAC,AFkWDnJ,EwBjUE,CtBjCD,CFkWG,CwBjUCy4B,CtBjCElyB,EAAK,CFkWH,CElWG,OFkWK,EAAE,KwBjUMixB,CAAAA,KAAAA,EAAOkB,MAAAA,EAAQ,KAAK,EAAE3qB,IAAAA,CAAK/N,IAAI,CAAA;ItBhCnEmJ,AsBkCA,ExBgUEta,CAAC,EElWHsa,CFkWMtY,AwBhUAyoC,GtBlCG9yB,GAAAA,CAAAA,CAAAA,AFkWK,CAAC7G,GwBhUT25B,ExBgUc,CAAC,AwBhUA9B,IxBgUIj5B,CwBhUJi5B,CAAM+B,OxBgUO,CAAC55B,KAAK,AwBhUA,CxBgUC,IAAIC,AwBhUA43B,KAAM+B,CAAAA,OxBgUO,CAAC55B,KAAK,AwBhUA,CxBgUC,EwBhUE,CAAA,CAAC,CAAA;IxBiUpE,AwBhUA25B,YAAY,CAAC51B,YAAAA,CAAa,GAAG/B,KAAAA;EAC/B,ExBgUE,IAAI,CAAC1B,IAAI,GAAGpR,CAAC;AwB/TjB,EtBlCE,EFkWE,IAAI,CElWC,AFkWAqR,MAAM,GAAG,CAAC,CAACrR,CAAC;AwB9TrB,ExB+TE,EElWEsa,KAAAA,AsBmCKqwB,eAAgBhlB,CAAAA,KAAK,EAAEjG,IAAI,EAAE;ExBgUpC,AwB/TA,EtBnCElF,EFkWElJ,EwB/TE6Z,GxB+TG,CElWG9Q,EAAAA,AFkWA,AwB/TN8Q,GAASxF,KAAAA,CAAMwF,MAAM;EtBlC3B,AsBmCA,CtBnCA,CFkWE,KwB/TKjc,ExB+TE,IAAI,AwB/TCD,CxB+TAoC,AwB/TApC,IAAI,CAACkc,CxB+TC,KwB/TDA,CAAAA,CAAQgM,MAAM,CAAC/hB,GAAO+V,IAAAA,MAAM,CAAC/V,GAAI,CAAA,CAACsK,IAAI,KAAKA,IAAAA,CAAAA,CAAMkrB,KAAK,EAAA;AtBlC3E,AsBmCA,ExB+TE;AEhWK,AsBmCP,ExB8TE,IAAI5nC,GEjWUyX,AFiWP,AwB9TAowB,GxB8TG,iBwB9TkBxT,CtBnCd5c,AsBmCc4c,CtBnCQ3c,GAAU,EAAEC,AsBmCd,EAAE7F,CtBnCsB,EAAE,EsBmCnB,EAAE;EtBlC3C,AsBmCA,ExB8TE,IAAI9U,CEjWCI,AFiWA,AwB9TA0zB,GxB8TGpjB,CEjWHtQ,AsBmCA0zB,CtBnCK9a,GFiWG,CEjWC,AFiWA,CEjWC5Y,GFiWG,CEjWHA,AFiWIgR,CEjWCnB,GAAG,AFiWA,CEjWC0K,AFiWA,EwB9TnBmZ,CtBnCmBnZ,CAAItW,AsBmCTgzB,CtBnCU,GAAG3c,EsBoChC,CtBpCgCA,CAAIrW,AsBoCpC,CtBpCqC,EAAE,CAAA,CAAA,GAAKjE,IAAAA,CAAK6P,GAAG,CAAC0K,GAAAA,CAAInE,CAAC,GAAGkE,GAAIlE,CAAAA,CAAC,EAAE,CAAA,CAAA,CAAA;AACxE,IFiWI,AwB7TEqN,IxB6TE7jB,CAAC,CwB7TH6jB,CxB6TK,CwB7TG,KAAK;AtBlCnB,IsBmCMinB,ExB6TA9qC,CAAC,CAACmB,CAAC,EwB7TMoB,CxB6TH7B,CwB7TG6B,ExB6TA,CAACvC,CAAC,CAACmB,CAAC,CAAC,EwB7TLoB;IxB8TX,AwB7TEsS,YAAcC,EAAAA,KAAAA;IxB8ThB,AwB7TEA,KAAAA,ExB6TK9U,CAAC;AE/VX,EFgWC,EwB7TIyqB,IAAM,EAAA,SAAA;AtBlCL,EFgWL,EwB7TItZ,ExB6TAnO,EwB7TM,CtBnCI4X,AFgWP,CAACrJ,AwB7TE,GxB6TC,EAAE,IEhWCqJ,CAAWzZ,CAAS,EAAEC,CAAS,EAAE;EAC/C,AsBmCE,CAAA,CxB6TA,AwB7TA,IxB6TI,CEhWC,AFgWAgQ,CEhWCjQ,CAAAA,EFgWG,CEhWCC,CAAIwW,CFgWF/G,EEhWE+G,KAAI,GFgWI,CEhWCD,AFgWApG,GEhWMmG,AFgWH,CAAC,EEhWEA,EAAAA;AACjC,AsBoCA,ExB4TE;AE9VF,AsBoCA,ExB2TE3H,OwB3TOg7B,ExB2TE,GAAG,YwB3TLA,CAAkB1T,MAAM,EAAEviB,KAAK,EAAE0mB,OAAO,EAAE;EACjD,ExB2TE,KwB3TK1H,ExB2TE,EwB3TFA,ExB2TM,CAACziB,MAAM,GAAGtB,KwB3ThB+jB,EAAcuD,ExB2TW,CAAC,GwB3TJ,CxB2TQ,CAACjmB,AwB3TT,IxB2Ta,CAAC,GAAG7O,SAAS;EACvD,EwB3TEshB,MAAAA,EAAQ,KAAK;AtBnChB,EF+VCvhB,EwB3TE0oC,OxB2TO,EwB3TIl2B,CxB2TD,CwB3TCA,KAAAA;AtBnCR,IF+VH,AwB3TAijB,KtBpCYld,CsBoCJtY,CxB2TD,CwB3TCA,GxB2TG,CAAC8O,KwB3TJ9O,CxB2TU,EE/VUpB,CAAAA,AF+VPmB,CE/VgB,EAAE,MF+VT,CAAC,IAAI,CAAC8O,IAAI,CAAC,GAAG7O,SAAS;EE9VvD,AF+VA,EwB3TE0oC,GAAK1oC,EtBpCA,AsBoCAA,CtBpCCpB,CAAIwW,GAAAA,GAAAA,CsBoCLpV,EtBpCWoV,GAAE,IAAKA,GAAAA;AAC3B,EF+VEvT,EwB3TEo3B,OxB2TO,AwB3TPA,GxB2TU;AE7Vd,IF8VI,AwB3TA1mB,KAAAA,ExB2TO,IAAI,CAACzD,MAAM,GAAGjN,SAAS,CAAC,IAAI,CAACgN,IAAI,CAAC,GAAG7O,SAAS;EACvD,EwB3TEkoB,IAAM,EAAA,SAAA;ExB4TRjZ,EwB3TEL,CxB2TC,CAACM,EwB3TI,EAAA,CxB2TC,EAAEC,MAAM,EAAE;AE7Vd,EsBmCL,CAAA,CxB2TE,AwB3TF,IxB2TMD,CE9VQqJ,IF8VH,EAAE,OE9VCA,CAAcR,KAAa,EAAES,KAAa,EAAEC,GAAW,EAAEC,qBAA+B,EAAE;AsBoC1G,EtBnCE,IF8VI,EE9VE9Z,CAAAA,GAAI0Z,AF8VAlJ,EAAE,GAAG,IAAI,CAAC3O,GAAG,EE9VGsX,CAAAA,KAAAA,CAAAA;AsBqC5B,EtBpCE,IF8VI,EE9VE5X,CAAAA,AsBoCCwoC,GtBpCGrwB,AF8VAjJ,EAAE,GAAGH,GwB1TIyN,CAAAA,CxB0TC,CAAClc,EwB1TE,CxB0TC,CE9VE+X,AsBoCDuC,CtBpCCvC,IsBoCI,CtBpCJA,CAAAA,AsBoCM;EtBnChC,AsBqCA,IxByTI,EE9VExZ,AsBqCAsT,CtBrCAtT,CF8VEsQ,EE9VEgJ,AF8VA,QwBzTWqE,GAAAA,ItBrCKlE,AsBqCLkE,CtBrCKlE,AsBqCAivB,GtBrCAjvB,CAAAA,MsBqCU,CAAClG,KAAK;EtBpC1C,AsBqCA,IxByTI,EE9VEoG,AsBqCAwE,IxByTI5N,AwBzTJ4N,CxByTK,EwBzTER,CxByTCxN,GwBzTIm4B,CtBrCZ3uB,AsBqCY2uB,ExByTE,CE9VChvB,GsBqCG,CxByTChJ,EAAE,CwBzTCqN,ExByTE,EwBzTG2qB,CxByTA,AwBzTAA,GtBrCZhvB,AF8VenJ,CE9VChP,CAAIvB,CsBqCF,CAACue,CtBrCCve,CAAAA,AF8VC,CE9VDA,CsBqCG;EtBpC5C,AsBqCA,IxByTI,AwBzTA,CAACue,CtBrCCvE,GsBqCK,CxByTDpY,CAAC,AwBzTA,GxByTG,CAAC,CE9VToY,EF8VYrJ,CE9VC+I,AF8VA,GAAG,CAAC,WE9VJA,CAAgBtZ,CAAIJ,GAAAA,CAAAA,CAAAA;EACvC,EsBqCE,ExByTE,EE9VEia,IF8VIja,CAAC,GAAGwQ,EAAE,CAACxQ,CE9VXia,AF8VY,GE9VGP,AF8VAjJ,EAAE,CAACzQ,CAAC,WE9VJ0Z,CAAgB1Z,CAAIuB,GAAAA,CAAAA,CAAAA;EACzC,IF8VI,EE9VE2Y,IF8VItJ,EAAE,GAAG,CE9VTsJ,AF8VU,CAACtY,CAAC,CE9VC8X,EF8VE1Z,CAAC,KAAK,CAAC,CAAC,GAAG4B,CAAC,CE9Vd8X,CAAgB1Z,CAAII,AF8VH,CAACwB,CAAC,CE9VCxB,CAAAA,CAAAA,AF8VEJ,CAAC,KAAK,CAAC,GAAG4B,CAAC,GAAG5B,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG;EE7VrE,AsBsCAmc,IxBwTIzL,CwBxTIyL,CxBwTF,CE9VCnc,CAAAA,AsBsCCmc,CxBwTC,CAAC,GE9VG5a,AF8VAqP,AwBxTLuL,CtBtCK5a,CF8VE,EwBxTEwc,CtBtCC/d,CAAMI,EsBsCP2d,CAAKO,EtBtCEle,CAAAA,IAAM0Z,AsBsCD,qBtBtCCA,IAAyBvY,CAAMnB,KAAAA,CAAAA,IACvD2Z,YAAeC,GAAAA,UAAAA,IAAcC,YAAeC,GAAAA,UAAAA;AACpD,EsBqCE,IxBwTI1J,CwBxTC,CxBwTC,CAAC7P,CAAC,GAAG,AwBxTAi2B,IxBwTI,EwBxTJA,CxBwTOhmB,EAAE,CwBxTCuL,ExBwTE3L,EAAE,CAAC7P,AwBxTE,CxBwTD,CwBxTC,ExBwTE+P,EAAE,GAAGD,EAAE,CAAC9P,CAAC,GA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B,AwBvSA,IAAI,CAAC8Q,CxBuSC3iB,GAAG,CwBvSC,ExBuSE,CwBvSC2iB,GxBuSG,CAACvU,CwBvSJuU,GxBuSQ;IACrB3iB,AwBvSA,GxBuSG,CAAC7B,AwBvSA,CxBuSC,AwBvSAimB,IxBuSI,AwBvSA,CxBuSC,EwBvSEzB,CxBuSCnV,IwBvSDmV,CxBuSM,AwBvSAyE,GAAG;IxBwSrB,AwBvSA,IAAI,CAACtV,ExBuSE,GwBvSG,CxBuSC,EwBvSED,YAAAA;AtBlDV,EF0VL,EwBvSE,IAAI,CtBnDQ2G,AsBmDPswB,UtBnDOtwB,CAAW1I,IsBmDH,CtBnDgB,EAAEiI,AsBmDf,CAAA,CAAC,GtBnD2B,EAAEC,GAAW,EAAE1C,OAAU,GAAA,IAAI,EAAE;EACpF,AF0VArG,EwBvSE,IAAI,CtBnDCa,AsBmDAo3B,ExBuSE,GE1VO9pC,AF0VJ,IE1VIA,EsBmDE,EtBnDFA,CAAKE,AsBmDA,GtBnDG,CAACya,AsBmDA,CAACgxB,ItBnDM/wB,EAAAA,CsBmDC,EtBnDDA,AsBmDC,CtBnDDA,GAAO1C,OAAWxF,IAAAA,KAAAA,IAAS1S,IAAKC,CAAAA,GAAG,CAAC0a,KAAAA,EAAOC,GAAO1C,CAAAA,GAAAA,OAAAA;AACpF,IF0VI,AwBvSA,IAAI,CAAC0zB,CxBuSChpC,GAAG,CwBvSC,ExBuSE,CwBvSC,GxBuSG,CAACoO,AwBvSA,CAAC84B,GxBuSG,QwBvSQ,CAAC/4B,IAAI;ArBvO/B,IH+gBH,AwBvSA,IAAI,CrBxOQsK,AqBwOPlG,CxBuSCrD,GAAG,GG9gBXwJ,AH8gBc3b,AwBvSA,CrBvOd2b,EqBuOiBnZ,ExBuSE,CG9gBH,AH8gBIS,EG7gBpB8P,CH6gBuB,CAAChR,CAAC,CwBvSRS,CrBtOJ,CH6gBe,CG5gB5BoZ,EH4gB+B,CG5gBC,EAChC,AH2gBkC3Y,GAAG,CAACjB,CAAC,GAAG,IAAI,GAAGiB,GAAG,CAAC5B,CAAC,GAAG,IAAI,CAAC;EG1gB9Dua,EH2gBE3Y,AwBtSA,CrBrOI2Y,EH2gBD,CG3gBCA,AH2gBA7Z,AwBtSA,CxBsSC,AwBtSAg2B,ErBrODnc,CH2gBI3Y,GAAG,CG3gBE8R,AH2gBD/S,CAAC,AwBtSA,GxBsSGiB,AwBtSA,CrBrOH8R,EH2gBM,CAAC1T,CG3gBGsa,AH2gBF,AwBtSA,GxBsSGxJ,EG3gBI,CAAC4C,AH2gBF,KG3gBEA,CAAM,GAAGhC,KAAI,CAAA;EAC5C,EH2gBE,AwBtSA,ErBrOE8I,EAAAA,AqBqOE,CAACqwB,ErBrOEvwB,AH2gBA,GwBtSG,CxBsSC,CG3gBEvZ,CAAAA,AqBqOAI,MrBrOM,GAAG,AqBqOTA,CrBrOS;EACxB,AH2gBA,EwBtSE,ErBrOEsZ,EAAK,AqBqOH,CAACqwB,ErBrOE,CAAA,QqBqOS,GAAG3pC,SAAAA;ErBpOrB,AH2gBA4P,EwBtSE,ErBrOE2J,EqBqOE,CrBrOFA,AH2gBG,AwBtSAqwB,CxBsSC37B,KAAK,EAAE,MwBtSM,GAAGjO,SAAAA;ErBnOxB,EH0gBE,AwBtSA,IAAI,CrBpOCqZ,AqBoOAwwB,CxBsSCppC,CG1gBD4Y,EH0gBI,CG1gBCC,EAAAA,AH0gBE,GG1gBG,AqBoOA,CrBpOG,AH0gBF,CAACzK,CG1gBC,AqBoOA7O,GxBsSG,MwBtSHA;IrBnOlBuZ,AH0gBA9Y,AwBtSA,GrBpOM,AH0gBH,CAAC7B,AwBtSA,CxBsSC,AwBtSAkrC,CrBpOExwB,EAAAA,CH0gBE,CAAC,CG1gBED,EAAO,AH0gBNpL,EwBtSE,ErBpOI,CAAA,AH0gBD,AwBtSAjO,SAAAA;IrBnOlB,AH0gBA,AwBtSA,IrBpOIoZ,AqBoOA,CAAC2wB,ErBpOD3wB,AH0gBG,CG1gBCG,GAAM,AH0gBH,CG1gBG,EAAA,UqBoOU,GAAG,KAAK;ExBuSlC,EwBtSE,ErBpOED,EAAKC,AqBoOH,CAACywB,ErBpOEzwB,GAAAA,aqBoOgB,GAAG,KAAK;ExBuSjC1J,EwBtSE,CrBpOO,GH0gBH,AwBtSA,CAACo6B,ErBpOE,AH0gBA,MwBtSM,GAAGjqC,SAAAA;IxBuShB,AwBtSA,ErBpOEqZ,EAAKE,AqBoOH,CAAC2wB,CxBsSCzsC,CG1gBC8b,AH0gBA,GG1gBAA,AH0gBG,IAAI,AwBtSA,CxBsSC1K,EwBtSE,ExBsSE,AwBtSA;IxBuSnBpR,AwBtSA,CxBsSC,CAAC8B,CAAC,CwBtSC,CAAC8pC,CxBsSC,GAAG,GAAG5rC,CAAC,CAAC8B,CAAC,QwBtSQ,GAAG,GAAA,CAAA,MAAA,CAAW8pC,kBAAkB;ErBnOzD,EH0gBE5rC,AwBtSA,CxBsSC,CAAC+B,CAAC,CwBtSC,CAAC8pC,CxBsSC,GAAG,GAAG7rC,CAAC,CAAC+B,CAAC,KwBtSK,GAAG,GAAA,CAAA,MAAA,CAAW8pC,eAAe;ErBlOnD,EHygBE7rC,AwBrSA,CxBqSC,CAACoB,CAAC,CwBrSC,CrBpOC,AqBoOAsrC,CxBqSC,GAAG,GAAG1sC,CAAC,CAACoB,CAAC,AwBrSA,EAAA;EACjB,ErBrOQya,AH0gBN,EG1gBMA,KH0gBC,IAAI;EACb,AwBpSA6wB,ErBvOY9wB,QqBuOC,GAAA;ErBvOC,AH4gBdvJ,CG5gBc,CqBwOZ,KxBoSK,CAAC7B,AwBpSA0O,IAAAA,CxBoSK,EAAE,AwBpSA,IAAI,CAACgrB,WAAW;ArBvOjC,IH4gBI35B,AwBpSA,IAAI,CAAC02B,CxBoSC,CAAC,IAAI,CAAC71B,EwBpSE,ExBoSE,AwBpSF,ExBoSI,CAAC,EAAEZ,KAAK,CAAC;AG1gB/B,IH2gBI,AwBpSA,IAAI,CAACm8B,ExBoSE,IAAI,IwBpSI,EAAA;ExBqSjB,EwBpSEztB,IAAAA,CAAKwsB,QAAQ,GAAGzC,SAAU/pB,CAAAA,IAAAA,CAAK2qB,MAAM,EAAE3qB,IAAAA,CAAAA;ExBqSzC5M,EwBpSE,IxBoSI,AwBpSA,CxBoSC9B,AwBpSAo8B,KxBoSK,EAAE,IwBpSI,EAAA;IxBqShBr8B,AwBnSA,IAAI,ExBmSE,CAAC,CwBnSC,CAACgF,ExBmSE,CAACnE,IAAI,AwBnSA,CAAC6d,CxBmSC,CAAC,EAAE,AwBnSA,CxBmSCze,GwBnSG,CAAC,CxBmSC,CAAC,EwBnSE,CAACmV,KAAK,CAACknB,eAAe,CAAC,QAAW,CAAA,EAAA;IxBoShE,EwBnSEz2B,KxBmSK,EwBnSLA,CAAQC,CxBmSC,GwBnSG,CAAC,oKAAA,CAAA;ExBoSjB;EACA9D,AwBnSA,QxBmSQ,CAAC/B,KAAK,EAAE;AG1gBjB,EqByOCs8B,ExBkSEv8B,MAAM,CAAC,EwBlSTu8B,CAAYj4B,CxBkSC,CAACzD,IAAI,EAAE,CAAC,EAAEZ,CwBlSC,EAAE,ExBkSE,CAAC;AG1gBxB,IH2gBH,AwBlSA,ErBzOSuL,EqByOL,GxBkSG,CwBlSC,CAACjH,ExBkSE,GG3gBa,AqByOV,GrBzOU,CAC1B4G,CqBwOqB7G,IrBvOrBO,EAAAA,GAAAA,EACAtC,CqBsOmC,EAAA,ErBrOnCkJ,EAAAA,IAAAA,KAEAP,OAAQC,CAAAA,KAAAA,EAAO5I,KAAOkJ,EAAAA,IAAAA,GAClBlH,KAAS,IAAA;EACT,AHogBJ,IwBlSIo2B,ErBlOMjvB,EAAKP,GAAAA,IqBkOC,CrBlOI,AqBkOJ,CrBlOK5G,GqBkOD,CAACo1B,CrBlOAp1B,CAAM,CAACM,GAAI,CAAA,IqBkOA,CAAA;ErBjO5B,AHogBJ5C,OGpgBWyJ,EAAAA,CHogBD,CAACzL,CGpgBKsC,IHogBA,CGpgBSmJ,CHogBP,GGpgBOA,EAAAA,KAAOnJ,KAAS4I,IAAAA,KAAK,CAAC5G,KAAQ,GAAA,CAAA,CAAE,CAACM,GAAAA,CAAI,KAAKtC,KAAAA;CAE/DgC,GAAAA,AHmgBFvE,AwBlSA,IAAI,CrBjOFuE,AqBiOGA,CxBkSC,CAAC,EGngBI4G,CqBiOD,CxBkSC,CAACtK,CwBlSCyD,CrBjOG,CAACC,CHmgBD,EAAE,CAAC,CGngBFA,CAAM,AHmgBF,CGngBGM,AHmgBF5E,GGngBE4E,AqBiOXP,CrBjOe,CHmgBD,CAAC,CGngBG/B,KAAK,CAAA;AAExC,EqBgOE,ExBkSE,OAAO,IAAI;EACb,AwBjSA65B,UAAa,GAAA;ExBkSbzoC,EwBjSE,IxBiSI,CAACC,CwBjSCwhB,ExBiSE,EAAE,CwBjSJA,GAAQ,IAAI,CAACA,KAAK;IxBkSxBzhB,AwBjSA,MxBiSM,AwBjSAgb,CxBiSC,GwBjSDA,CxBiSK,CAAC9N,CwBjSC,GxBiSG,CwBjSC,CxBiSCjN,AwBjSA+lC,GxBiSG,CAAC,OwBjSO;IxBkS7B,AwBjSA,MAAMY,CxBiSC,IAAI,EwBjSLA,GAAU,IAAI,CAACiC,U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qB,CAAAA,EAAGyR,EZjGGtU,EYiGHsU,CZjGGtU,CYiGGmX,GZjGHnX,CAAKugB,AYiGIpP,EAAAA,CZjGD,CAAC+c,CYiGA/c,EZjGO8c,CAAAA,GAAAA,MAAAA;IYkG1B,EZjGAH,GYiGKjrB,CAAAA,GAAI8X,CZjGE3a,GAAAA,CYiGF2a,EAAOrG,CZjGLtU,CAAKugB,EYiGO5F,CZjGJ,CAACuT,CYiGGvT,EZjGHuT,CAAAA,EYiGGvT,EZjGKhY,CAAIA,AYiGDuc,GZjGCvc,CAAAA,CYiGI,EZjGA,AYiGEE,CZjGEorB,AYiGFprB,GZjGEorB,AYiGE3Z,IAAM,EZjGF,AYiGE,CZjGH,CYiGKzR,CAAG,EAAA;MZhGrDmnB,AYiGE7Y,GZjGF6Y,AYiGQ8B,CZjGJ2C,EYiGI3C,IZjGE,AYiGE,CZjGD7nB,AYiGEpB,CZjGEgrB,AYiGA,CAAA,EZjGAA,QAAAA,EAAUzX,CAAIuX,GAAAA,OAAAA,CAAAA;MAC7B3D,AYiGE7S,GZjGF6S,CAAI0E,AYiGFvX,GAAO,CAAA,CAAC,CZjGA,CAAClT,CAAI4pB,GAAAA,QAAAA,EAAUzX,CAAIuX,GAAAA,OAAAA,CAAAA;MAC7B3D,AYiGE7S,GZjGF6S,CAAIyE,AYiGE,CAACrP,KZjGG,CAACnb,AYiGGqb,CZjGCwO,AYiGDxO,GZjGCwO,CYiGG,CAAC,GAAG1O,GZjGP0O,EAAU1X,CAAIsX,AYiGPtO,CAAOwY,EZjGAlK,GYiGK,CAAC/W,GZjGN+W,CAAAA,AYiGM/W,iBAAiBxF,EAAAA,GAAAA,EAAKglC,QAAWtzC,CAAAA,EAAAA,CAAAA,CAAAA;MZhGpEmnB,AYiGE2N,GZjGF3N,CAAI0E,EYiGFiJ,CAAOlhB,GZjGC,CAACxS,AYiGE,CZjGE6pB,AYiGD6mB,GZjGC7mB,OYiGD6mB,CZjGC7mB,AYiGUnX,EZjGAP,CAAIsX,CYiGJ/W,EZjGI+W,OAAAA,CAAAA,OYiGJ/W,EAAiBxF,GAAKilC,EAAAA,QAAAA,CAAAA,EAAWj/B,IAAAA,EAAMsyB,MAAQ5mC,EAAAA,CAAAA,CAAAA,CAAAA;IACxE,EZjGAqrB,GAAOrW,IAAAA,UAAAA;IYkGP,EZ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","file":"drawCharts.4024a466.js","sourceRoot":"../src","sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","\nimport Chart from 'chart.js/auto';\n\n\n\nexport async function createChart(data){\n\n      var test1 = [\n        '1962-01-02', '1962-01-03', '1962-01-04', '1962-01-05', '1962-01-08',\n        '1962-01-09', '1962-01-10', '1962-01-11', '1962-01-12', '1962-01-15',\n        '1962-01-16', '1962-01-17', '1962-01-18', '1962-01-19', '1962-01-22',\n        '1962-01-23', '1962-01-24', '1962-01-25', '1962-01-26', '1962-01-29', ];\n        var test2 = [\n        '4.06', '4.03', '3.99', '4.02', '4.03', '4.05', '4.07',\n        '4.08', '4.08', '4.10', '4.13', '4.12', '4.11', '4.11',\n        '4.09', '4.11', '4.10', '4.11', '4.11', '4.12', '4.11',\n        '4.10', '4.09'];\n        \n        var data = test1.map(function(date, i) {\n          return {\n            date: (new Date(date)).getDate(),\n            value: parseFloat(test2[i])\n          };\n        });\n\n      var temp = new Chart(\n        document.getElementById('mainChart'),\n        {\n          type: 'line',\n          data: {\n            labels: data.map(row => row.date),\n            datasets: [\n              {\n                label: 'C1',\n                data: data.map(row => row.value)\n              }\n            ]\n          }\n        }\n      );\n    };\n//       console.log(\"reached the end of drawCharts.js\")\n     \n// };\n\n// document.getElementById(\"test\").addEventListener(\"click\", createChart);\n\nexport default createChart;"]}